import { compare, hash } from "bcrypt";
import { getServerSession } from "next-auth";
import { authOptions } from "@/app/api/auth/[...nextauth]/auth-options";
import { neon } from "@neondatabase/serverless";

export default async function handler(req, res) {
  console.log("üì© Jelsz√≥v√°ltoztat√°s API h√≠vva...");

  if (req.method !== "POST") {
    console.log("‚ùå Hib√°s HTTP met√≥dus:", req.method);
    return res.status(405).json({ message: "Met√≥dus nem t√°mogatott." });
  }

  const sql = neon(`${process.env.DATABASE_URL}`);

  // Session lek√©r√©se
  const session = await getServerSession(req, res, authOptions);
  if (!session) {
    console.log("‚ùå Hiba: Nincs bejelentkezve!");
    return res.status(401).json({ message: "Nincs bejelentkezve." });
  }

  console.log("‚úÖ Bejelentkezett felhaszn√°l√≥:", session.user.short_name);

  const { oldPassword, newPassword } = req.body;
  if (!oldPassword || !newPassword) {
    console.log("‚ùå Hi√°nyz√≥ adatok:", { oldPassword, newPassword });
    return res.status(400).json({ message: "Minden mez≈ët ki kell t√∂lteni." });
  }

  // Ellen≈ërizz√ºk a r√©gi jelsz√≥t
  console.log("üîç R√©gi jelsz√≥ ellen≈ërz√©se...");
  const isMatch = await compare(oldPassword, session.user.password);
  if (!isMatch) {
    console.log("‚ùå Hib√°s r√©gi jelsz√≥!");
    return res.status(400).json({ message: "Hib√°s r√©gi jelsz√≥." });
  }
  console.log("‚úÖ R√©gi jelsz√≥ helyes.");

  // √öj jelsz√≥ hash-el√©se
  console.log("üîê √öj jelsz√≥ hash-el√©se...");
  const newHashedPassword = await hash(newPassword, 10);

  try {
    console.log("üì° Adatb√°zis friss√≠t√©se...");
    await sql(
      "UPDATE admins SET password = $1 WHERE short_name = $2",
      [newHashedPassword, session.user.short_name]
    );
    console.log("‚úÖ Jelsz√≥ sikeresen m√≥dos√≠tva!");
    return res.status(200).json({ message: "Jelsz√≥ sikeresen m√≥dos√≠tva!" });
  } catch (error) {
    console.log("‚ùå Hiba az adatb√°zis friss√≠t√©sekor:", error.message);
    return res.status(500).json({ message: "Hiba a jelsz√≥ m√≥dos√≠t√°sa sor√°n.", error: error.message });
  }
}
