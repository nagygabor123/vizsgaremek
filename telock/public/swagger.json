{
    "openapi": "3.0.0",
    "paths": {
        "/api/setup/ascToDatabase": {
            "post": {
                "summary": "Az asc órarend tervező program xml fájljából az adatok kinyerése és feltöltése az adatbázisba",
                "description": "Ez az API végpont az ASC órarend tervező szoftver XML fájljából nyeri ki az órarendi adatokat, majd azokat feltölti az adatbázisba. A feldolgozás során az alábbi információk kerülnek kinyerésre és tárolásra:\n\n- **Csengetési rend**: Az egyes tanórák kezdési és befejezési időpontjai.\n- **Tanárok**: A pedagógusok neve, rövidítése, valamint az osztályfőnöki szerepkör (ha elérhető).\n- **Osztályok és csoportok**: A teljes osztályok és kisebb tanulócsoportok listája.\n- **Órarend**: A tantárgyak, tanárok, időpontok és osztályok/csoportok kapcsolatai.\n\nA végpont egy `multipart/form-data` kérést fogad el, amelyben a feltöltött XML fájlt dolgozza fel. A sikeres feldolgozás után az adatok továbbításra kerülnek az adatbázisba, és egy JSON választ küld vissza a mentett adatokkal.",
                "tags": [
                    "Setup"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary",
                                        "description": "Az asc órarend tervező XML fájlja"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "XML adatok sikeresen feldolgozva és továbbítva!"
                    },
                    "400": {
                        "description": "Hiba a fájl feltöltésekor! VAGY Nincs fájl feltöltve!"
                    },
                    "500": {
                        "description": "Hiba a fájl feldolgozása közben"
                    },
                    "405": {
                        "description": "A metódus nem követhető"
                    }
                }
            }
        },
        "/api/setup/studentsToDatabase": {
            "post": {
                "summary": "Diákok feltöltése az adatbázisba egy CSV fájlból",
                "description": "Ez az API végpont lehetővé teszi diákok adatainak feltöltését egy CSV fájlból az adatbázisba. A fájl formátumának megfelelően kell tartalmaznia a diákok adatait, például:\n\n- **Név (Nev)**\n- **Osztály (csoportok ',' elválasztva)**\n\nA feltöltött adatok alapján minden diáknak generálódik egy egyedi OM azonosító és egy RFID tag. Az adatok az adatbázisba kerülnek mentésre.",
                "tags": [
                    "Setup"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary",
                                        "description": "A diákokat tartalmazó CSV fájl"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Sikeresen hozzáadva: 'x' diák"
                    },
                    "400": {
                        "description": "Hiba a fájl feltöltésekor! VAGY Üres vagy érvénytelen CSV fájl!"
                    },
                    "500": {
                        "description": "Hiba a fájl feldolgozása közben"
                    },
                    "405": {
                        "description": "A metódus nem követhető"
                    }
                }
            }
        },
        "/api/upload/uploadRinging": {
            "post": {
                "summary": "Csengetési rend feltöltése",
                "description": "Ez az API végpont a csengetési rend adatainak feltöltésére szolgál. Az adatokat egy tömb formájában várja, amelyben a csengetési időpontok kezdő és végidőpontja szerepel. Ha bármelyik adat hiányzik vagy hibás, a rendszer figyelmeztetést ad, és azt a sort kihagyja.",
                "tags": [
                    "Upload"
                ],
                "responses": {
                    "200": {
                        "description": "Csengetési rend sikeresen feltöltve!"
                    },
                    "400": {
                        "description": "A ringing tömb üres vagy hibás"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    },
                    "500": {
                        "description": "Hiba az adatok feltöltésekor"
                    }
                }
            }
        },
        "/api/upload/uploadEmployees": {
            "post": {
                "summary": "Tanárok feltöltése",
                "description": "Ez az API végpont a tanárok adatainak feltöltésére szolgál. Az adatokat egy tömb formájában várja, amely tartalmazza a tanárok nevét, pozícióját, osztályfőnökét, rövid nevét, és egy alapértelmezett jelszót generál. Ha bármelyik adat hiányzik vagy hibás, a rendszer figyelmeztetést ad, és a hibás sort kihagyja.",
                "tags": [
                    "Upload"
                ],
                "responses": {
                    "201": {
                        "description": "Tanárok sikeresen feltöltve!"
                    },
                    "400": {
                        "description": "Az employees tömb üres vagy hibás"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    },
                    "500": {
                        "description": "Hiba az adatok feltöltésekor"
                    }
                }
            }
        },
        "/api/upload/uploadGroups": {
            "post": {
                "summary": "Csoportok feltöltése",
                "description": "Ez az API végpont a csoportok adatainak feltöltésére szolgál. A POST kérés egy tömb formájában várja a csoportok neveit, és az adatokat a 'csoportok' táblába tölti fel. Ha a 'groups' tömb üres vagy hibás, a rendszer 400-as hibával válaszol. A csoportok sikeres feltöltésekor 201-es státuszkódot küld vissza a válaszban.",
                "tags": [
                    "Upload"
                ],
                "responses": {
                    "201": {
                        "description": "Csoportok sikeresen feltöltve!"
                    },
                    "400": {
                        "description": "A groups tömb üres vagy hibás"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    },
                    "500": {
                        "description": "Hiba az adatok feltöltésekor"
                    }
                }
            }
        },
        "/api/upload/uploadTimetables": {
            "post": {
                "summary": "Órarend feltöltése",
                "description": "Ez az API végpont az órarend adatainak feltöltésére szolgál. Az adatokat egy tömb formájában várja, amely tartalmazza a tanárok nevét, csoportjaikat, napokat, kezdési és befejezési időpontokat. Az adatok között szerepelhetnek több csoportok is, és ha bármelyik adat hiányzik vagy hibás, a rendszer figyelmeztetést ad és kihagyja a hibás bejegyzéseket. Az órarend sikeres feltöltése után a kapcsolódó csoportok is mentésre kerülnek.",
                "tags": [
                    "Upload"
                ],
                "responses": {
                    "201": {
                        "description": "Órarend sikeresen feltöltve!"
                    },
                    "400": {
                        "description": "A schedule tömb üres vagy hibás"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    },
                    "500": {
                        "description": "Hiba az adatok feltöltésekor"
                    }
                }
            }
        },
        "/api/upload/uploadStudLockRelations": {
            "post": {
                "summary": "Diák-szekrény kapcsolat létrehozása",
                "description": "Ez az API végpont felelős a diákok RFID-címkéjeinek és szekrényeik hozzárendelésének kezeléséért. A végpont először lekéri az összes diák RFID-címkéjét, majd hozzáadja azokat a szekrényeket a rendszerhez, amelyek a diákok számára rendelhetők. Ha nincs RFID-címke egyetlen diáknál sem, akkor hibát jelez. A szekrények és a diákok közötti kapcsolatok sikeresen feltöltésre kerülnek az adatbázisba. Ha a szekrények száma már elérte a maximális értéket, a rendszer új szekrényekhez rendeli a diákokat.",
                "tags": [
                    "Upload"
                ],
                "responses": {
                    "201": {
                        "description": "Diák-szekrény kapcsolatok sikeresen feltöltve!"
                    },
                    "400": {
                        "description": "Nem találtak RFID-címkével rendelkező diákokat"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    },
                    "500": {
                        "description": "Hiba az adatok feltöltésekor"
                    }
                }
            }
        },
        "/api/upload/uploadStudentGroups": {
            "post": {
                "summary": "Diák-csoportok  létrehozása",
                "description": "Ez az API végpont a diákok és csoportjaik közötti kapcsolatok létrehozására szolgál. A végpont először lekéri a diákok listáját, majd összeveti a diákok osztályait a meglévő csoportokkal. Ha a diák osztálya egyezik egy csoport nevével, a kapcsolatot rögzíti a 'student_groups' táblában. A sikeres művelet után a diák-csoport kapcsolatok mentésre kerülnek. Ha nem található egyező csoport, vagy ha nincs mit beilleszteni, a rendszer egy figyelmeztetést küld. A végpont csak POST kéréseket fogad.",
                "tags": [
                    "Upload"
                ],
                "responses": {
                    "201": {
                        "description": "Diák-csoport kapcsolatok sikeresen feltöltve!"
                    },
                    "400": {
                        "description": "Nem találtak megfelelő diákcsoportokat, semmi sem került beillesztésre."
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    },
                    "500": {
                        "description": "Hiba az adatok feltöltésekor"
                    }
                }
            }
        },
        "/api/locker/checkLocker": {
            "get": {
                "summary": "RFID ellenőrzés a zárhoz",
                "description": "Ez az API végpont lehetővé teszi a felhasználó számára, hogy ellenőrizze, hogy egy adott RFID címke hozzáféréssel rendelkezik-e. A végpont lekéri az adott RFID címkéhez tartozó adatokat az adatbázisból, és visszaadja, hogy a felhasználónak van-e engedélyezett hozzáférése. Ha a RFID címke nem található az adatbázisban, a rendszer egy hibát jelez. A végpont csak GET kéréseket fogad, és az RFID címkét a query paraméterben várja.",
                "tags": [
                    "Locker"
                ],
                "parameters": [
                    {
                        "name": "rfid",
                        "in": "query",
                        "required": true,
                        "description": "Az RFID címke, amelyet ellenőrizni szeretnénk."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sikeres lekérdezés"
                    },
                    "400": {
                        "description": "RFID szükséges"
                    },
                    "404": {
                        "description": "RFID nem található"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    },
                    "500": {
                        "description": "Hiba az adatok lekérdezésekor"
                    }
                }
            }
        },
        "/api/locker/getLocker": {
            "get": {
                "summary": "Szekrény nyitása RFID címkével",
                "description": "Ez az API végpont lehetővé teszi a felhasználó számára, hogy ellenőrizze, hogy egy adott RFID címke hozzáféréssel rendelkezik-e egy szekrényhez. A végpont lekéri az adott RFID címkéhez tartozó adatokat az adatbázisból, és visszaadja, hogy a felhasználónak van-e engedélyezett hozzáférése, vagy ha a hozzáférés zárolt. Ezen kívül ellenőrzi a diák órarendjét is, és ha az aktuális idő tartozik az órák közé, a zár nyitva marad. Ha az RFID címke nem található, vagy nincs hozzáférése a szekrényhez, a rendszer egy hibát jelez. A végpont csak GET kéréseket fogad, és az RFID címkét a query paraméterben várja.",
                "tags": [
                    "Locker"
                ],
                "parameters": [
                    {
                        "name": "rfid",
                        "in": "query",
                        "required": true,
                        "description": "Az RFID címke, amelynek a szekrényét nyitni szeretnénk."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sikeres lekérdezés, a zár nyitva van, vagy a szekrényhez tartozó információk visszaadása."
                    },
                    "400": {
                        "description": "RFID szükséges"
                    },
                    "404": {
                        "description": "RFID nem található VAGY Nem található szekrény_id ehhez az RFID-hez VAGY Nem található a szekrény"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    },
                    "500": {
                        "description": "Hiba az adatok lekérdezésekor"
                    }
                }
            }
        },
        "/api/locker/setLockerStatus": {
            "patch": {
                "summary": "Szekrény státuszának frissítése és diák hozzáférés módosítása",
                "description": "Ez az API végpont lehetővé teszi a felhasználó számára, hogy frissítse egy adott szekrény státuszát (nyitva vagy zárva). Ha a szekrény státusza 'be', akkor a rendszer a státuszt 'ki'-ra változtatja, és fordítva. A végpont emellett frissíti a diák hozzáférését a szekrényhez (pl. 'zarva'). Ha a szekrényhez nincs társított diák, vagy ha a státusz frissítése nem sikerült, hibaüzenet kerül visszaküldésre. A végpont csak PATCH kéréseket fogad, és a szekrény azonosítóját (id) query paraméterként várja.",
                "tags": [
                    "Locker"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "description": "A szekrény azonosítója, amelynek a státuszát módosítani szeretnénk."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sikeres státusz frissítés, a szekrény státusza és a diák hozzáférése frissítve lett."
                    },
                    "400": {
                        "description": "Érvénytelen locker_id"
                    },
                    "404": {
                        "description": "Szekrény nem található VAGY Nincs társított diák ehhez a szekrényhez"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    },
                    "500": {
                        "description": "Hiba az adatok feltöltésekor VAGY Sikertelen szekrény státusz frissítés VAGY Sikertelen diák access frissítés"
                    }
                }
            }
        },
        "/api/system/closeOpen": {
            "post": {
                "summary": "Rendszer hozzáférési állapotának frissítése",
                "description": "Ez az API végpont lehetővé teszi a felhasználó számára, hogy frissítse a rendszer hozzáférési állapotát (nyitott vagy zárt). Ha az 'action' értéke 'close', akkor a rendszer státusza 'zarva' (zárt) lesz, ha pedig 'open', akkor 'nyithato' (nyitható). A végpont a 'system_status' táblában található 'status' mezőt frissíti. Az 'action' paraméter a kérés body-jában kerül átadásra. Amennyiben az 'action' értéke nem 'close' vagy 'open', hibaüzenet kerül visszaküldésre. A végpont csak POST kéréseket fogad.",
                "tags": [
                    "System"
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "action": {
                                        "type": "string",
                                        "enum": [
                                            "close",
                                            "open"
                                        ],
                                        "description": "Az 'action' mező értéke 'close' vagy 'open' lehet. 'close' esetén a rendszer státusza 'zarva', 'open' esetén 'nyithato'."
                                    }
                                },
                                "example": {
                                    "action": "close"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Az összes diák 'access' mezője és a 'status' nyithato/zarva (-ra) frissítve"
                    },
                    "400": {
                        "description": "Érvénytelen 'action'. Az 'action' csak 'close' vagy 'open' értéket fogadhat el."
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett. Csak POST kérés engedélyezett."
                    },
                    "500": {
                        "description": "Nem sikerült frissíteni az 'access' és 'status' állapotot"
                    }
                }
            }
        },
        "/api/system/status": {
            "get": {
                "summary": "A rendszer státuszának lekérdezése",
                "description": "Ez az API végpont a rendszer aktuális státuszának lekérdezésére szolgál. A végpont egyetlen rekordot olvas ki a 'system_status' táblából, amely a rendszer állapotát tárolja. A lekérdezés az adott státuszt (például 'zarva' vagy 'nyithato') adja vissza. A lekérdezés sikeressége esetén a rendszer egy JSON választ küld, amely tartalmazza a státusz értékét. Ha az adatbázisban nincs elérhető státusz, akkor a végpont egy 404-es hibát küld vissza. Ha a lekérdezés során hiba történik (például adatbázis-kapcsolati probléma), akkor egy 500-as hibaüzenetet kap a kliens. A végpont kizárólag GET metódussal érhető el, más HTTP metódusok használata esetén 405-ös hibakódot ad vissza.",
                "tags": [
                    "System"
                ],
                "responses": {
                    "201": {
                        "description": "'zarva' vagy 'nyithato' státusz visszaküldve"
                    },
                    "400": {
                        "description": "A rendszer státusza nem található"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    },
                    "500": {
                        "description": "Hiba az adatok lekérdezésekor"
                    }
                }
            }
        },
        "/api/system/studentAccess": {
            "post": {
                "summary": "Diák engedélyezése a szekrényhez",
                "description": "Ez az API végpont lehetővé teszi a felhasználó számára, hogy egy adott diák RFID hozzáférését frissítse az adatbázisban. A végpont egy adott diák azonosítójához (student_id) rendelt hozzáférési státuszt módosítja 'nyitható' értékre.",
                "tags": [
                    "System"
                ],
                "parameters": [
                    {
                        "name": "student",
                        "in": "query",
                        "required": true,
                        "description": "A diák azonosítója, akinek az 'access' mezőjét frissíteni szeretnénk."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "'xy' diák 'access' frissítve nyithato-ra"
                    },
                    "400": {
                        "description": "'student_id' hiányzik"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    },
                    "500": {
                        "description": "Hiba az adatok feltöltésekor"
                    }
                }
            }
        },
        "/api/timetable/getClassTimetable": {
            "get": {
                "summary": "Egy adott osztály órarendjének lekérdezése",
                "description": "Ez az API végpont egy adott osztályhoz tartozó órarend lekérdezésére szolgál. A lekérdezés az 'osztály' paraméter alapján történik, amely a csoport nevét adja meg. Az eredmény egy JSON tömb, amely az adott osztály órarendjének adatait tartalmazza, beleértve a hét napját, az óra kezdési és befejezési időpontját, az osztály és a csoport nevét, valamint a tanár rövid nevét. Az adatok a hét napja szerint és időrendben vannak rendezve.",
                "tags": [
                    "Timetable"
                ],
                "parameters": [
                    {
                        "name": "className",
                        "in": "query",
                        "description": "Az osztály neve, amelynek az órarendjét le szeretnénk kérdezni. A keresés részleges egyezéssel történik.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sikeres válasz, amely az adott osztály órarendjét tartalmazza.",
                        "content": {
                            "application/json": {
                                "example": [
                                    {
                                        "day_of_week": "monday",
                                        "start_time": "08:00:00",
                                        "end_time": "08:45:00",
                                        "class": "10.A",
                                        "group_name": "Matematika",
                                        "teacher_name": "Kovacs"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Hiányzik 'class' paraméter!"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett."
                    },
                    "500": {
                        "description": "Hiba az adatok lekérdezésekor"
                    }
                }
            }
        },
        "/api/timetable/getTeacherTimetable": {
            "get": {
                "summary": "Egy adott tanár órarendjének lekérdezése",
                "description": "Ez az API végpont egy adott tanárhoz tartozó órarend lekérdezésére szolgál. A lekérdezés a 'teacherName' paraméter alapján történik, amely a tanár rövid nevét adja meg. Az eredmény egy JSON tömb, amely az adott tanár órarendjének adatait tartalmazza, beleértve a hét napját, az óra kezdési és befejezési időpontját, a csoportok neveit és a tanár nevét. Az adatok a hét napja szerint és időrendben vannak rendezve.",
                "tags": [
                    "Timetable"
                ],
                "parameters": [
                    {
                        "name": "teacherName",
                        "in": "query",
                        "description": "A tanár rövid neve, akinek az órarendjét le szeretnénk kérdezni.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sikeres válasz, amely az adott tanár órarendjét tartalmazza.",
                        "content": {
                            "application/json": {
                                "example": [
                                    {
                                        "day_of_week": "monday",
                                        "start_time": "08:00:00",
                                        "end_time": "08:45:00",
                                        "class": "10.A, 11.B",
                                        "group_name": "Matematika",
                                        "teacher_name": "Kovacs"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Hiányzik 'teacherName' paraméter!"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett."
                    },
                    "500": {
                        "description": "Hiba az adatok lekérdezésekor."
                    }
                }
            }
        },
        "/api/timetable/allScheduleStart": {
            "get": {
                "summary": "Diákok napi első és utolsó órájának lekérdezése",
                "description": "Ez az API végpont visszaadja az adott napi órarend alapján a diákok első és utolsó tanórájának időpontját. Az adatok a nap aktuális dátuma alapján kerülnek lekérdezésre.",
                "tags": [
                    "Timetable"
                ],
                "responses": {
                    "200": {
                        "description": "Sikeres válasz, amely tartalmazza a diákok első és utolsó tanórájának kezdési és befejezési időpontját.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "students": [
                                        {
                                            "student_id": 1,
                                            "full_name": "Kovács Péter",
                                            "first_class_start": "08:00:00",
                                            "last_class_end": "14:30:00"
                                        },
                                        {
                                            "student_id": 2,
                                            "full_name": "Nagy Anna",
                                            "first_class_start": "09:00:00",
                                            "last_class_end": "15:15:00"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Nincs tanóra a mai nap!"
                    },
                    "500": {
                        "description": "Hiba az adatok lekérdezésekor"
                    }
                }
            }
        },
        "/api/timetable/scheduleStart": {
            "get": {
                "summary": "egy adott diák napi első és utolsó órájának lekérdezése",
                "description": "Ez az API végpont visszaadja az adott napi órarend alapján egy diáknak első és utolsó tanórájának időpontját. Az adatok a nap aktuális dátuma alapján kerülnek lekérdezésre.",
                "tags": [
                    "Timetable"
                ],
                "parameters": [
                    {
                        "name": "student",
                        "in": "query",
                        "description": "A dátum, amelynek az órarendjét le szeretnénk kérdezni. Formátum: YYYY-MM-DD. Ha nincs megadva, akkor a mai napra vonatkozó adatokat adja vissza.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sikeres válasz, amely tartalmazza a diákok első és utolsó tanórájának kezdési és befejezési időpontját.",
                        "content": {
                            "application/json": {
                                "example": {
                                    "students": [
                                        {
                                            "student_id": 1,
                                            "full_name": "Kovács Péter",
                                            "first_class_start": "08:00:00",
                                            "last_class_end": "14:30:00"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Hiányzó 'student_id'!"
                    },
                    "404": {
                        "description": "Nincs tanóra a megadott napon!"
                    },
                    "500": {
                        "description": "Hiba az adatok lekérdezésekor"
                    }
                }
            }
        },
        "/api/students/create": {
            "post": {
                "summary": "Új diák létrehozása",
                "description": "Ez az API végpont lehetővé teszi egy új diák hozzáadását a rendszerhez a megadott adatokkal. A diák regisztrálása során meg kell adni az egyedi azonosítóját (OM szám), teljes nevét, osztályát és RFID címkéjét. A sikeres regisztráció után a rendszer automatikusan létrehoz egy szekrényt a diáknak, és hozzárendeli azt az RFID címkéjéhez. Emellett a diák hozzáadódik a megfelelő csoportokhoz az API hívás révén. Amennyiben bármelyik kötelező mező hiányzik, a szerver hibát ad vissza. Ha a regisztráció sikeres, a válaszban visszaküldi a diák azonosítóját és a hozzá tartozó szekrény számát.",
                "tags": [
                    "Students"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "student_id": {
                                        "type": "string",
                                        "example": "OM56555"
                                    },
                                    "full_name": {
                                        "type": "string",
                                        "example": "Kiss Péter"
                                    },
                                    "class": {
                                        "type": "string",
                                        "example": "12.A"
                                    },
                                    "rfid_tag": {
                                        "type": "string",
                                        "example": "58D90E3E"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Sikeresen létrehozott diák"
                    },
                    "400": {
                        "description": "Hiányzó kötelező mezők"
                    },
                    "500": {
                        "description": "Hiba a diák létrehozása során"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    }
                }
            }
        },
        "/api/students/read": {
            "get": {
                "summary": "Diákok lekérése",
                "description": "Ez az API végpont a diákok adatainak lekérésére szolgál. Az adatbázisból lekérdezi az összes diák adatait, beleértve az RFID címkéjüket és egyéb releváns információkat. Ha a diákhoz tartozik egy szekrénykapcsolat, akkor a rendszer csatolja hozzá a szekrény aktuális státuszát is. Az adatokat az `students` táblából nyeri ki, amelyet bal oldali csatlakozással (`LEFT JOIN`) összekapcsol a `locker_relationships` és `lockers` táblákkal. A válasz JSON formátumban tartalmazza a diákok listáját és esetlegesen a hozzárendelt szekrények állapotát.",
                "tags": [
                    "Students"
                ],
                "200": {
                    "description": "Sikeres lekérés"
                },
                "405": {
                    "description": "A HTTP metódus nem engedélyezett"
                },
                "500": {
                    "description": "Hiba az adatok lekérésénél"
                }
            }
        },
        "/api/students/update": {
            "put": {
                "summary": "Diák adatainak frissítése",
                "description": "Ez az API végpont a diákok adatainak frissítésére szolgál. A frissítés magában foglalja a diák nevének, osztályának és RFID címkéjének módosítását. Ha a diák RFID címkéje nem változik, csak a név és osztály kerül frissítésre. Ha az RFID címke változik, akkor a rendszer ellenőrzi, hogy az új RFID címke már nem tartozik más diákhoz. Amennyiben van már más diákhoz rendelt RFID, a rendszer egy új diákot hoz létre és az új RFID címkét az ő adatainál tárolja, miközben a régi diákot törli. Ha a diákhoz tartozó szekrény kapcsolatot is frissíteni kell, a rendszer a szekrény kapcsolatot is módosítja az új RFID címke szerint.",
                "tags": [
                    "Students"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "student_id": {
                                        "type": "string",
                                        "example": "OM44444"
                                    },
                                    "full_name": {
                                        "type": "string",
                                        "example": "Pál Edvin"
                                    },
                                    "class": {
                                        "type": "string",
                                        "example": "13.D"
                                    },
                                    "rfid_tag": {
                                        "type": "string",
                                        "example": "53D00E3E"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sikeres frissítés VAGY Sikeres diák és szekrény kapcsolat frissítés"
                    },
                    "400": {
                        "description": "Hiányzó vagy érvénytelen mezők"
                    },
                    "404": {
                        "description": "A diák nem található VAGY A diák és szekrény kapcsolat nem található"
                    },
                    "500": {
                        "description": "Hiba történt a diák adatainak frissítése során"
                    }
                }
            }
        },
        "/api/students/delete": {
            "delete": {
                "summary": "Diák törlése",
                "description": "Ez az API végpont lehetővé teszi egy diák törlését az adatbázisból. A törlés folyamata először ellenőrzi, hogy a megadott `student_id` létezik-e az adatbázisban. Ha igen, a rendszer eltávolítja a diákhoz tartozó összes kapcsolódó információt, beleértve a locker kapcsolatokat is. A sikeres törlés után a diák rekordja teljesen eltávolításra kerül. Ha a diák nem található, a rendszer megfelelő hibaüzenetet küld vissza. A törléshez a HTTP DELETE metódus használata szükséges.",
                "tags": [
                    "Students"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "student_id": {
                                        "type": "string",
                                        "example": "OM56555"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sikeres törlés"
                    },
                    "400": {
                        "description": "Hiányzó student_id"
                    },
                    "404": {
                        "description": "A diák nem található"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    },
                    "500": {
                        "description": "Hiba történt a diák törlése során"
                    }
                }
            }
        },
        "/api/students/setStudentGroups": {
            "post": {
                "summary": "Egy diák csoportokba rendezése",
                "description": "Ez a végpont lehetővé teszi egy diák csoportokba történő rendezését. Ha új diákot hozol létre vagy egy meglévő diák adatait frissíted, a rendszer az adott diákhoz tartozó osztálynevek alapján meghatározza, mely csoportokhoz tartozik. A diák a megadott osztálynevek alapján kerül hozzárendelésre a csoportokhoz, amennyiben ezek az osztályok már léteznek a rendszerben. Ha a diák nem található az adatbázisban, a rendszer hibaüzenetet küld. Ha a diák már szerepel a csoportokban, akkor azok először törlésre kerülnek, majd az új csoportok kerülnek hozzáadásra. A rendszer visszajelzést ad a csoportokba való sikeres hozzárendelésről vagy annak hiányáról.",
                "tags": [
                    "Students"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "student_id": {
                                        "type": "string",
                                        "example": "OM56555"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Nem találtam csoport egyezést"
                    },
                    "201": {
                        "description": "Sikeres csoportba rendezés"
                    },
                    "400": {
                        "description": "Hiányzó student_id"
                    },
                    "404": {
                        "description": "A diák nem található"
                    },
                    "500": {
                        "description": "Hiba az adatok feltöltésekor"
                    },
                    "405": {
                        "description": "A metódus nem követhető"
                    }
                }
            }
        },
        "/api/config/getRinging": {
            "get": {
                "summary": "Csengetési rend lekérdezése",
                "description": "Ez az API végpont lehetővé teszi a csengetési rend lekérdezését a rendszerben. A válaszban a csengetési időpontok kerülnek visszaküldésre, azaz a kezdési és befejezési időpontok formázott órák és percek szerint. A válasz formátuma tartalmazza a kezdési és befejezési időpontokat az 'HH:mm' formátumban.",
                "tags": [
                    "Config"
                ],
                "responses": {
                    "200": {
                        "description": "A csengetési rend sikeresen lekérdezve",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "start": {
                                                "type": "string",
                                                "example": "07:15"
                                            },
                                            "end": {
                                                "type": "string",
                                                "example": "08:00"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Hiba a csengetési rend lekérdezésekor"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    }
                }
            }
        },
        "/api/config/getEmployees": {
            "get": {
                "summary": "Admin alkalmazottak lekérdezése",
                "description": "Ez az API végpont lehetővé teszi az adminisztrátorok adatainak lekérdezését a rendszerből. A lekérdezés visszaadja az adminisztrátorok listáját, amely tartalmazza az adminisztrátorok azonosítóját, teljes nevét, rövid nevét, pozícióját és osztályfőnöküket. A válasz sikeres végrehajtása esetén egy JSON objektumot ad vissza, amely tartalmazza az összes adminisztrátor adatait.",
                "tags": [
                    "Config"
                ],
                "responses": {
                    "200": {
                        "description": "Sikeresen lekérdezett adminisztrátorok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "admin_id": {
                                                "type": "string",
                                                "example": "admin123"
                                            },
                                            "full_name": {
                                                "type": "string",
                                                "example": "Nagy János"
                                            },
                                            "short_name": {
                                                "type": "string",
                                                "example": "Jani"
                                            },
                                            "position": {
                                                "type": "string",
                                                "example": "Rendszergazda"
                                            },
                                            "osztalyfonok": {
                                                "type": "string",
                                                "example": "12.A"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Hiba az adminisztrátorok lekérdezése során"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    }
                }
            }
        },
        "/api/config/addEmployee": {
            "post": {
                "summary": "Új alkalmazott létrehozása",
                "description": "Ez az API végpont lehetővé teszi egy új alkalmazott hozzáadását a rendszerhez a megadott adatokkal. Az alkalmazott regisztrálása során meg kell adni a teljes nevét, pozícióját, osztályfőnöki státuszát és rövid nevét. A sikeres regisztráció után a rendszer automatikusan generál egy jelszót az alkalmazott számára, amely a válaszban is visszaküldésre kerül. Ha bármelyik kötelező mező hiányzik, a szerver hibát ad vissza. Ha a regisztráció sikeres, a válaszban visszaküldi a sikeres hozzáadást és a generált jelszót.",
                "tags": [
                    "Config"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "full_name": {
                                        "type": "string",
                                        "example": "Kiss Péter"
                                    },
                                    "position": {
                                        "type": "string",
                                        "example": "Fejlesztő"
                                    },
                                    "osztalyfonok": {
                                        "type": "string",
                                        "example": "Nincs"
                                    },
                                    "short_name": {
                                        "type": "string",
                                        "example": "pppp"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Sikeresen hozzáadott alkalmazott!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sikeresen hozzáadott alkalmazott!"
                                        },
                                        "password": {
                                            "type": "string",
                                            "example": "a1b2c3d4e5f6g7h8"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Hiányzó kötelező mezők"
                    },
                    "500": {
                        "description": "Hiba a hozzáadás során"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    }
                }
            }
        },
        "/api/config/updateEmployee": {
            "put": {
                "summary": "Alkalmazottak frissítése",
                "description": "Ez az API végpont lehetővé teszi egy adminisztrátor adatainak frissítését a megadott adatokkal. Az adminisztrátor frissítése során meg kell adni az adminisztrátor egyedi azonosítóját (admin_id), teljes nevét, pozícióját és osztályfőnökét. A sikeres frissítés után a rendszer válaszol a frissített adatokkal. Amennyiben bármelyik kötelező mező hiányzik, a szerver hibát ad vissza. Ha a frissítés sikeres, a válaszban visszaküldi a frissített adminisztrátor adatait.",
                "tags": [
                    "Config"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "admin_id": {
                                        "type": "string",
                                        "example": "123"
                                    },
                                    "full_name": {
                                        "type": "string",
                                        "example": "Kovács Gábor"
                                    },
                                    "position": {
                                        "type": "string",
                                        "example": "Rendszergazda"
                                    },
                                    "osztalyfonok": {
                                        "type": "string",
                                        "example": "12.B"
                                    }
                                },
                                "required": [
                                    "admin_id",
                                    "full_name",
                                    "position",
                                    "osztalyfonok"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sikeres frissítés",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sikeres frissítés"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Hiányzó kötelező mezők"
                    },
                    "500": {
                        "description": "Hiba a frissítés során"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    }
                }
            }
        },
        "/api/config/deleteEmployee": {
            "delete": {
                "summary": "Alkalmazottak törlése",
                "description": "Ez az API végpont lehetővé teszi egy adminisztrátor törlését az admin ID alapján. Az admin ID paramétert a kérés query paramétereként kell megadni. Az ID értéke nem lehet 1 (illetve egyéb esetekben a kódba hardkódolt tiltott ID-k). Ha az ID nem található az adatbázisban, a rendszer hibaüzenetet ad vissza.",
                "tags": [
                    "Config"
                ],
                "parameters": [
                    {
                        "name": "admin_id",
                        "in": "query",
                        "required": true,
                        "description": "Az adminisztrátor egyedi azonosítója, amelyet törölni kívánunk.",
                        "schema": {
                            "type": "string",
                            "example": "2"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sikeresen törölt adminisztrátor",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sikeres törlés"
                                        },
                                        "deletedId": {
                                            "type": "string",
                                            "example": "2"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Hiányzó ID paraméter vagy tiltott ID érték"
                    },
                    "404": {
                        "description": "Nem található adminisztrátor az adott ID-val"
                    },
                    "500": {
                        "description": "Hiba a törlés során"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    }
                }
            }
        },
        "/api/config/getYearSchedule": {
            "get": {
                "summary": "Évkezdési és évzárási információk lekérdezése",
                "description": "Ez az API végpont lehetővé teszi az év kezdési és zárási időpontjainak, valamint a szünnapok és plusznapok adatainak lekérdezését. Az API a megadott típusú adatokat adja vissza a lekérdezés alapján. Támogatott típusok: 'plusznap', 'szunet', 'tanitasnelkul', 'kezd', 'veg'. A válasz formátuma a típusnak megfelelően változik.",
                "tags": [
                    "Config"
                ],
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "description": "A lekérdezés típusa. Lehet: 'plusznap', 'szunet', 'tanitasnelkul', 'kezd', 'veg'.",
                        "schema": {
                            "type": "string",
                            "example": "plusznap"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sikeres lekérdezés",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "tanitasnelkul_alap": {
                                            "type": "array",
                                            "description": "A tanítás nélküli napok listája",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Szünet"
                                                    },
                                                    "start": {
                                                        "type": "string",
                                                        "example": "2025-02-01"
                                                    },
                                                    "end": {
                                                        "type": "string",
                                                        "example": "2025-02-03"
                                                    }
                                                }
                                            }
                                        },
                                        "schoolYearStart": {
                                            "type": "object",
                                            "properties": {
                                                "start": {
                                                    "type": "string",
                                                    "example": "2024-09-01"
                                                }
                                            }
                                        },
                                        "schoolYearEnd": {
                                            "type": "object",
                                            "properties": {
                                                "end": {
                                                    "type": "string",
                                                    "example": "2025-06-15"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Hiányzó kötelező paraméter"
                    },
                    "404": {
                        "description": "Nincs találat a lekérdezéshez"
                    },
                    "500": {
                        "description": "Hiba a lekérdezés során"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    }
                }
            }
        },
        "/api/config/setYearStartEnd": {
            "post": {
                "summary": "Évfolyam beosztás frissítése",
                "description": "Ez az API végpont lehetővé teszi az évfolyam beosztásának frissítését a megadott típus (kezd vagy veg) és nap (which_day) alapján. A típusnak 'kezd' vagy 'veg' kell lennie, és a napnak érvényes dátumnak kell lennie. Ha a frissítés sikeres, a rendszer visszaküldi a frissített típust és napot.",
                "tags": [
                    "Config"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "example": "kezd",
                                        "description": "A beosztás típusa (kezd vagy veg)"
                                    },
                                    "which_day": {
                                        "type": "string",
                                        "example": "2025-03-01",
                                        "description": "A frissített nap dátuma"
                                    }
                                },
                                "required": [
                                    "type",
                                    "which_day"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sikeres frissítés",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sikeres frissítés"
                                        },
                                        "updatedType": {
                                            "type": "string",
                                            "example": "kezd"
                                        },
                                        "updatedDate": {
                                            "type": "string",
                                            "example": "2025-03-01"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Hiányzó kötelező paraméterek vagy érvénytelen típus"
                    },
                    "404": {
                        "description": "A megfelelő rekord nem található"
                    },
                    "500": {
                        "description": "Hiba a frissítés során"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    }
                }
            }
        },
        "/api/config/addPlusBreak": {
            "post": {
                "summary": "Új évszak bejegyzés hozzáadása",
                "description": "Ez az API végpont lehetővé teszi egy új évszak bejegyzés (szünet, plusznap vagy tanítás nélküli nap) hozzáadását a rendszerhez. A bejegyzés hozzáadásához meg kell adni a típusát, nevét, az érintett napot és az azt helyettesítő napot. A sikeres hozzáadás után a válasz tartalmazza a frissített adatokat.",
                "tags": [
                    "Config"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "A bejegyzés típusa. Értékek: 'szunet', 'plusznap', 'tanitasnelkul'.",
                                        "example": "szunet"
                                    },
                                    "nev": {
                                        "type": "string",
                                        "description": "A bejegyzés neve vagy leírása (pl. 'Karácsonyi szünet').",
                                        "example": "Karácsonyi szünet"
                                    },
                                    "which_day": {
                                        "type": "string",
                                        "description": "A dátum, amely a bejegyzéshez kapcsolódik (pl. '2024-12-21').",
                                        "example": "2024-12-21"
                                    },
                                    "replace_day": {
                                        "type": "string",
                                        "description": "Az a nap, amelyik a bejegyzést helyettesíti (pl. 'monday').",
                                        "example": "monday"
                                    }
                                },
                                "required": [
                                    "type",
                                    "nev",
                                    "which_day",
                                    "replace_day"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sikeres frissítés",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sikeres frissítés"
                                        },
                                        "updatedType": {
                                            "type": "string",
                                            "example": "szunet"
                                        },
                                        "updatedDate": {
                                            "type": "string",
                                            "example": "2024-12-21"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Hiányzó paraméterek vagy érvénytelen típus"
                    },
                    "500": {
                        "description": "Hiba a hozzáadás során"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    }
                }
            }
        },
        "/api/config/deletePlusBreak": {
            "delete": {
                "summary": "Évterv törlése",
                "description": "Ez az API végpont lehetővé teszi egy évterv törlését a megadott azonosító alapján. A törlés előtt ellenőrzi, hogy a megadott ID létezik-e, és nem lehet 1 vagy 2. Ha a törlés sikeres, a válaszban visszaküldi a törölt ID-t.",
                "tags": [
                    "Config"
                ],
                "parameters": [
                    {
                        "name": "year_schedule_id",
                        "in": "query",
                        "required": true,
                        "description": "Az évterv azonosítója, amelyet törölni szeretnénk.",
                        "schema": {
                            "type": "string",
                            "example": "3"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sikeres törlés",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sikeres törlés"
                                        },
                                        "deletedId": {
                                            "type": "string",
                                            "example": "3"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Hiányzó ID paraméter vagy érvénytelen ID"
                    },
                    "404": {
                        "description": "Nem található rekord ezzel az ID-val"
                    },
                    "500": {
                        "description": "Hiba a törlés során"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "What is Lorem Ipsum?Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.Why do we use it?It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).Where does it come from?Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney College in Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and going through the cites of the word in classical literature, discovered the undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of de Finibus Bonorum et Malorum (The Extremes of Good and Evil) by Cicero, written in 45 BC. This book is a treatise on the theory of ethics, very popular during the Renaissance. The first line of Lorem Ipsum,Lorem ipsum dolor sit amet.., comes from a line in section 1.10.32.The standard chunk of Lorem Ipsum used since the 1500s is reproduced below for those interested. Sections 1.10.32 and 1.10.33 from de Finibus Bonorum et Malorum by Cicero are also reproduced in their exact original form, accompanied by English versions from the 1914 translation by H. Rackham.": {}
        }
    }
}