{
    "openapi": "3.0.0",
    "paths": {
        "/api/setup/ascToDatabase": {
            "post": {
                "summary": "Az asc órarend tervező program xml fájljából az adatok kinyerése és feltöltése az adatbázisba",
                "description": "Ez az API végpont az ASC órarend tervező szoftver XML fájljából nyeri ki az órarendi adatokat, majd azokat feltölti az adatbázisba. A feldolgozás során az alábbi információk kerülnek kinyerésre és tárolásra:\n\n- **Csengetési rend**: Az egyes tanórák kezdési és befejezési időpontjai.\n- **Tanárok**: A pedagógusok neve, rövidítése, valamint az osztályfőnöki szerepkör (ha elérhető).\n- **Osztályok és csoportok**: A teljes osztályok és kisebb tanulócsoportok listája.\n- **Órarend**: A tantárgyak, tanárok, időpontok és osztályok/csoportok kapcsolatai.\n\nA végpont egy `multipart/form-data` kérést fogad el, amelyben a feltöltött XML fájlt dolgozza fel. A sikeres feldolgozás után az adatok továbbításra kerülnek az adatbázisba, és egy JSON választ küld vissza a mentett adatokkal.",
                "tags": [
                    "Setup"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary",
                                        "description": "Az asc órarend tervező XML fájlja"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "XML adatok sikeresen feldolgozva és továbbítva!"
                    },
                    "400": {
                        "description": "Hiba a fájl feltöltésekor! VAGY Nincs fájl feltöltve!"
                    },
                    "500": {
                        "description": "Hiba a fájl feldolgozása közben"
                    },
                    "405": {
                        "description": "A metódus nem követhető"
                    }
                }
            }
        },
        "/api/setup/studentsToDatabase": {
            "post": {
                "summary": "Diákok feltöltése az adatbázisba egy CSV fájlból",
                "description": "Ez az API végpont lehetővé teszi diákok adatainak feltöltését egy CSV fájlból az adatbázisba. A fájl formátumának megfelelően kell tartalmaznia a diákok adatait, például:\n\n- **Név (Nev)**\n- **Osztály (csoportok ',' elválasztva)**\n\nA feltöltött adatok alapján minden diáknak generálódik egy egyedi OM azonosító és egy RFID tag. Az adatok az adatbázisba kerülnek mentésre.",
                "tags": [
                    "Setup"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary",
                                        "description": "A diákokat tartalmazó CSV fájl"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Sikeresen hozzáadva: 'x' diák"
                    },
                    "400": {
                        "description": "Hiba a fájl feltöltésekor! VAGY Üres vagy érvénytelen CSV fájl!"
                    },
                    "500": {
                        "description": "Hiba a fájl feldolgozása közben"
                    },
                    "405": {
                        "description": "A metódus nem követhető"
                    }
                }
            }
        },
        "/api/upload/uploadRinging": {
            "post": {
                "summary": "Csengetési rend feltöltése",
                "description": "Ez az API végpont a csengetési rend adatainak feltöltésére szolgál. Az adatokat egy tömb formájában várja, amelyben a csengetési időpontok kezdő és végidőpontja szerepel. Ha bármelyik adat hiányzik vagy hibás, a rendszer figyelmeztetést ad, és azt a sort kihagyja.",
                "tags": [
                    "Upload"
                ],
                "responses": {
                    "200": {
                        "description": "Csengetési rend sikeresen feltöltve!"
                    },
                    "400": {
                        "description": "A ringing tömb üres vagy hibás"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    },
                    "500": {
                        "description": "Hiba az adatok feltöltésekor"
                    }
                }
            }
        },
        "/api/upload/uploadEmployees": {
            "post": {
                "summary": "Tanárok feltöltése",
                "description": "Ez az API végpont a tanárok adatainak feltöltésére szolgál. Az adatokat egy tömb formájában várja, amely tartalmazza a tanárok nevét, pozícióját, osztályfőnökét, rövid nevét, és egy alapértelmezett jelszót generál. Ha bármelyik adat hiányzik vagy hibás, a rendszer figyelmeztetést ad, és a hibás sort kihagyja.",
                "tags": [
                    "Upload"
                ],
                "responses": {
                    "201": {
                        "description": "Tanárok sikeresen feltöltve!"
                    },
                    "400": {
                        "description": "Az employees tömb üres vagy hibás"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    },
                    "500": {
                        "description": "Hiba az adatok feltöltésekor"
                    }
                }
            }
        },
        "/api/upload/uploadGroups": {
            "post": {
                "summary": "Csoportok feltöltése",
                "description": "Ez az API végpont a csoportok adatainak feltöltésére szolgál. A POST kérés egy tömb formájában várja a csoportok neveit, és az adatokat a 'csoportok' táblába tölti fel. Ha a 'groups' tömb üres vagy hibás, a rendszer 400-as hibával válaszol. A csoportok sikeres feltöltésekor 201-es státuszkódot küld vissza a válaszban.",
                "tags": [
                    "Upload"
                ],
                "responses": {
                    "201": {
                        "description": "Csoportok sikeresen feltöltve!"
                    },
                    "400": {
                        "description": "A groups tömb üres vagy hibás"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    },
                    "500": {
                        "description": "Hiba az adatok feltöltésekor"
                    }
                }
            }
        },
        "/api/upload/uploadTimetables": {
            "post": {
                "summary": "Órarend feltöltése",
                "description": "Ez az API végpont az órarend adatainak feltöltésére szolgál. Az adatokat egy tömb formájában várja, amely tartalmazza a tanárok nevét, csoportjaikat, napokat, kezdési és befejezési időpontokat. Az adatok között szerepelhetnek több csoportok is, és ha bármelyik adat hiányzik vagy hibás, a rendszer figyelmeztetést ad és kihagyja a hibás bejegyzéseket. Az órarend sikeres feltöltése után a kapcsolódó csoportok is mentésre kerülnek.",
                "tags": [
                    "Upload"
                ],
                "responses": {
                    "201": {
                        "description": "Órarend sikeresen feltöltve!"
                    },
                    "400": {
                        "description": "A schedule tömb üres vagy hibás"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    },
                    "500": {
                        "description": "Hiba az adatok feltöltésekor"
                    }
                }
            }
        },
        "/api/upload/uploadStudLockRelations": {
            "post": {
                "summary": "Diák-szekrény kapcsolat létrehozása",
                "description": "Ez az API végpont felelős a diákok RFID-címkéjeinek és szekrényeik hozzárendelésének kezeléséért. A végpont először lekéri az összes diák RFID-címkéjét, majd hozzáadja azokat a szekrényeket a rendszerhez, amelyek a diákok számára rendelhetők. Ha nincs RFID-címke egyetlen diáknál sem, akkor hibát jelez. A szekrények és a diákok közötti kapcsolatok sikeresen feltöltésre kerülnek az adatbázisba. Ha a szekrények száma már elérte a maximális értéket, a rendszer új szekrényekhez rendeli a diákokat.",
                "tags": [
                    "Upload"
                ],
                "responses": {
                    "201": {
                        "description": "Diák-szekrény kapcsolatok sikeresen feltöltve!"
                    },
                    "400": {
                        "description": "Nem találtak RFID-címkével rendelkező diákokat"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    },
                    "500": {
                        "description": "Hiba az adatok feltöltésekor"
                    }
                }
            }
        },
        "/api/upload/uploadStudentGroups": {
            "post": {
                "summary": "Diák-csoportok  létrehozása",
                "description": "Ez az API végpont a diákok és csoportjaik közötti kapcsolatok létrehozására szolgál. A végpont először lekéri a diákok listáját, majd összeveti a diákok osztályait a meglévő csoportokkal. Ha a diák osztálya egyezik egy csoport nevével, a kapcsolatot rögzíti a 'student_groups' táblában. A sikeres művelet után a diák-csoport kapcsolatok mentésre kerülnek. Ha nem található egyező csoport, vagy ha nincs mit beilleszteni, a rendszer egy figyelmeztetést küld. A végpont csak POST kéréseket fogad.",
                "tags": [
                    "Upload"
                ],
                "responses": {
                    "201": {
                        "description": "Diák-csoport kapcsolatok sikeresen feltöltve!"
                    },
                    "400": {
                        "description": "Nem találtak megfelelő diákcsoportokat, semmi sem került beillesztésre."
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    },
                    "500": {
                        "description": "Hiba az adatok feltöltésekor"
                    }
                }
            }
        },
        "/api/locker/checkLocker": {
            "get": {
                "summary": "RFID ellenőrzés a zárhoz",
                "description": "Ez az API végpont lehetővé teszi a felhasználó számára, hogy ellenőrizze, hogy egy adott RFID címke hozzáféréssel rendelkezik-e. A végpont lekéri az adott RFID címkéhez tartozó adatokat az adatbázisból, és visszaadja, hogy a felhasználónak van-e engedélyezett hozzáférése. Ha a RFID címke nem található az adatbázisban, a rendszer egy hibát jelez. A végpont csak GET kéréseket fogad, és az RFID címkét a query paraméterben várja.",
                "tags": [
                    "Locker"
                ],
                "parameters": [
                    {
                        "name": "rfid",
                        "in": "query",
                        "required": true,
                        "description": "Az RFID címke, amelyet ellenőrizni szeretnénk."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sikeres lekérdezés"
                    },
                    "400": {
                        "description": "RFID szükséges"
                    },
                    "404": {
                        "description": "RFID nem található"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    },
                    "500": {
                        "description": "Hiba az adatok lekérdezésekor"
                    }
                }
            }
        },
        "/api/locker/getLocker": {
            "get": {
                "summary": "Szekrény nyitása RFID címkével",
                "description": "Ez az API végpont lehetővé teszi a felhasználó számára, hogy ellenőrizze, hogy egy adott RFID címke hozzáféréssel rendelkezik-e egy szekrényhez. A végpont lekéri az adott RFID címkéhez tartozó adatokat az adatbázisból, és visszaadja, hogy a felhasználónak van-e engedélyezett hozzáférése, vagy ha a hozzáférés zárolt. Ezen kívül ellenőrzi a diák órarendjét is, és ha az aktuális idő tartozik az órák közé, a zár nyitva marad. Ha az RFID címke nem található, vagy nincs hozzáférése a szekrényhez, a rendszer egy hibát jelez. A végpont csak GET kéréseket fogad, és az RFID címkét a query paraméterben várja.",
                "tags": [
                    "Locker"
                ],
                "parameters": [
                    {
                        "name": "rfid",
                        "in": "query",
                        "required": true,
                        "description": "Az RFID címke, amelynek a szekrényét nyitni szeretnénk."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sikeres lekérdezés, a zár nyitva van, vagy a szekrényhez tartozó információk visszaadása."
                    },
                    "400": {
                        "description": "RFID szükséges"
                    },
                    "404": {
                        "description": "RFID nem található VAGY Nem található szekrény_id ehhez az RFID-hez VAGY Nem található a szekrény"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    },
                    "500": {
                        "description": "Hiba az adatok lekérdezésekor"
                    }
                }
            }
        },
        "/api/locker/setLockerSatus": {
            "get": {
                "summary": "Szekrény státuszának frissítése és diák hozzáférés módosítása",
                "description": "Ez az API végpont lehetővé teszi a felhasználó számára, hogy frissítse egy adott szekrény státuszát (nyitva vagy zárva). Ha a szekrény státusza 'be', akkor a rendszer a státuszt 'ki'-ra változtatja, és fordítva. A végpont emellett frissíti a diák hozzáférését a szekrényhez (pl. 'zarva'). Ha a szekrényhez nincs társított diák, vagy ha a státusz frissítése nem sikerült, hibaüzenet kerül visszaküldésre. A végpont csak PATCH kéréseket fogad, és a szekrény azonosítóját (id) query paraméterként várja.",
                "tags": [
                    "Locker"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "description": "A szekrény azonosítója, amelynek a státuszát módosítani szeretnénk."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sikeres státusz frissítés, a szekrény státusza és a diák hozzáférése frissítve lett."
                    },
                    "400": {
                        "description": "Érvénytelen locker_id"
                    },
                    "404": {
                        "description": "Szekrény nem található VAGY Nincs társított diák ehhez a szekrényhez"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    },
                    "500": {
                        "description": "Hiba az adatok feltöltésekor VAGY Sikertelen szekrény státusz frissítés VAGY Sikertelen diák access frissítés"
                    }
                }
            }
        },
        "/api/students/create": {
            "post": {
                "summary": "Új diák létrehozása",
                "description": "Ez az API végpont lehetővé teszi egy új diák hozzáadását a rendszerhez a megadott adatokkal. A diák regisztrálása során meg kell adni az egyedi azonosítóját (OM szám), teljes nevét, osztályát és RFID címkéjét. A sikeres regisztráció után a rendszer automatikusan létrehoz egy szekrényt a diáknak, és hozzárendeli azt az RFID címkéjéhez. Emellett a diák hozzáadódik a megfelelő csoportokhoz az API hívás révén. Amennyiben bármelyik kötelező mező hiányzik, a szerver hibát ad vissza. Ha a regisztráció sikeres, a válaszban visszaküldi a diák azonosítóját és a hozzá tartozó szekrény számát.",
                "tags": [
                    "Students"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "student_id": {
                                        "type": "string",
                                        "example": "OM56555"
                                    },
                                    "full_name": {
                                        "type": "string",
                                        "example": "Kiss Péter"
                                    },
                                    "class": {
                                        "type": "string",
                                        "example": "12.A"
                                    },
                                    "rfid_tag": {
                                        "type": "string",
                                        "example": "58D90E3E"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Sikeresen létrehozott diák"
                    },
                    "400": {
                        "description": "Hiányzó kötelező mezők"
                    },
                    "500": {
                        "description": "Hiba a diák létrehozása során"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    }
                }
            }
        },
        "/api/students/read": {
            "get": {
                "summary": "Diákok lekérése",
                "description": "Ez az API végpont a diákok adatainak lekérésére szolgál. Az adatbázisból lekérdezi az összes diák adatait, beleértve az RFID címkéjüket és egyéb releváns információkat. Ha a diákhoz tartozik egy szekrénykapcsolat, akkor a rendszer csatolja hozzá a szekrény aktuális státuszát is. Az adatokat az `students` táblából nyeri ki, amelyet bal oldali csatlakozással (`LEFT JOIN`) összekapcsol a `locker_relationships` és `lockers` táblákkal. A válasz JSON formátumban tartalmazza a diákok listáját és esetlegesen a hozzárendelt szekrények állapotát.",
                "tags": [
                    "Students"
                ],
                "200": {
                    "description": "Sikeres lekérés"
                },
                "405": {
                    "description": "A HTTP metódus nem engedélyezett"
                },
                "500": {
                    "description": "Hiba az adatok lekérésénél"
                }
            }
        },
        "/api/students/update": {
            "put": {
                "summary": "Diák adatainak frissítése",
                "description": "Ez az API végpont a diákok adatainak frissítésére szolgál. A frissítés magában foglalja a diák nevének, osztályának és RFID címkéjének módosítását. Ha a diák RFID címkéje nem változik, csak a név és osztály kerül frissítésre. Ha az RFID címke változik, akkor a rendszer ellenőrzi, hogy az új RFID címke már nem tartozik más diákhoz. Amennyiben van már más diákhoz rendelt RFID, a rendszer egy új diákot hoz létre és az új RFID címkét az ő adatainál tárolja, miközben a régi diákot törli. Ha a diákhoz tartozó szekrény kapcsolatot is frissíteni kell, a rendszer a szekrény kapcsolatot is módosítja az új RFID címke szerint.",
                "tags": [
                    "Students"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "student_id": {
                                        "type": "string",
                                        "example": "OM44444"
                                    },
                                    "full_name": {
                                        "type": "string",
                                        "example": "Pál Edvin"
                                    },
                                    "class": {
                                        "type": "string",
                                        "example": "13.D"
                                    },
                                    "rfid_tag": {
                                        "type": "string",
                                        "example": "53D00E3E"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sikeres frissítés VAGY Sikeres diák és szekrény kapcsolat frissítés"
                    },
                    "400": {
                        "description": "Hiányzó vagy érvénytelen mezők"
                    },
                    "404": {
                        "description": "A diák nem található VAGY A diák és szekrény kapcsolat nem található"
                    },
                    "500": {
                        "description": "Hiba történt a diák adatainak frissítése során"
                    }
                }
            }
        },
        "/api/students/delete": {
            "delete": {
                "summary": "Diák törlése",
                "description": "Ez az API végpont lehetővé teszi egy diák törlését az adatbázisból. A törlés folyamata először ellenőrzi, hogy a megadott `student_id` létezik-e az adatbázisban. Ha igen, a rendszer eltávolítja a diákhoz tartozó összes kapcsolódó információt, beleértve a locker kapcsolatokat is. A sikeres törlés után a diák rekordja teljesen eltávolításra kerül. Ha a diák nem található, a rendszer megfelelő hibaüzenetet küld vissza. A törléshez a HTTP DELETE metódus használata szükséges.",
                "tags": [
                    "Students"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "student_id": {
                                        "type": "string",
                                        "example": "OM56555"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sikeres törlés"
                    },
                    "400": {
                        "description": "Hiányzó student_id"
                    },
                    "404": {
                        "description": "A diák nem található"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    },
                    "500": {
                        "description": "Hiba történt a diák törlése során"
                    }
                }
            }
        },
        "/api/students/setStudentGroups": {
            "post": {
                "summary": "Egy diák csoportokba rendezése",
                "description": "Ez a végpont lehetővé teszi egy diák csoportokba történő rendezését. Ha új diákot hozol létre vagy egy meglévő diák adatait frissíted, a rendszer az adott diákhoz tartozó osztálynevek alapján meghatározza, mely csoportokhoz tartozik. A diák a megadott osztálynevek alapján kerül hozzárendelésre a csoportokhoz, amennyiben ezek az osztályok már léteznek a rendszerben. Ha a diák nem található az adatbázisban, a rendszer hibaüzenetet küld. Ha a diák már szerepel a csoportokban, akkor azok először törlésre kerülnek, majd az új csoportok kerülnek hozzáadásra. A rendszer visszajelzést ad a csoportokba való sikeres hozzárendelésről vagy annak hiányáról.",
                "tags": [
                    "Students"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "student_id": {
                                        "type": "string",
                                        "example": "OM56555"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Nem találtam csoport egyezést"
                    },
                    "201": {
                        "description": "Sikeres csoportba rendezés"
                    },
                    "400": {
                        "description": "Hiányzó student_id"
                    },
                    "404": {
                        "description": "A diák nem található"
                    },
                    "500": {
                        "description": "Hiba az adatok feltöltésekor"
                    },
                    "405": {
                        "description": "A metódus nem követhető"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "johndoe@example.com"
                    }
                }
            }
        }
    }
}