{
    "openapi": "3.0.0",
    "paths": {
        "/api/setup/ascToDatabase": {
            "post": {
                "summary": "Az asc órarend tervező program xml fájljából az adatok kinyerése és feltöltése az adatbázisba",
                "description": "Ez az API végpont az ASC órarend tervező szoftver XML fájljából nyeri ki az órarendi adatokat, majd azokat feltölti az adatbázisba. A feldolgozás során az alábbi információk kerülnek kinyerésre és tárolásra:\n\n- **Csengetési rend**: Az egyes tanórák kezdési és befejezési időpontjai.\n- **Tanárok**: A pedagógusok neve, rövidítése, valamint az osztályfőnöki szerepkör (ha elérhető).\n- **Osztályok és csoportok**: A teljes osztályok és kisebb tanulócsoportok listája.\n- **Órarend**: A tantárgyak, tanárok, időpontok és osztályok/csoportok kapcsolatai.\n\nA végpont egy `multipart/form-data` kérést fogad el, amelyben a feltöltött XML fájlt dolgozza fel. A sikeres feldolgozás után az adatok továbbításra kerülnek az adatbázisba, és egy JSON választ küld vissza a mentett adatokkal.",
                "tags": [
                    "Setup"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary",
                                        "description": "Az asc órarend tervező XML fájlja"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "XML adatok sikeresen feldolgozva és továbbítva!"
                    },
                    "400": {
                        "description": "Hiba a fájl feltöltésekor! VAGY Nincs fájl feltöltve!"
                    },
                    "500": {
                        "description": "Hiba a fájl feldolgozása közben"
                    },
                    "405": {
                        "description": "A metódus nem követhető"
                    }
                }
            }
        },
        "/api/setup/studentsToDatabase": {
            "post": {
                "summary": "Diákok feltöltése az adatbázisba egy CSV fájlból",
                "description": "Ez az API végpont lehetővé teszi diákok adatainak feltöltését egy CSV fájlból az adatbázisba. A fájl formátumának megfelelően kell tartalmaznia a diákok adatait, például:\n\n- **Név (Nev)**\n- **Osztály (csoportok ',' elválasztva)**\n\nA feltöltött adatok alapján minden diáknak generálódik egy egyedi OM azonosító és egy RFID tag. Az adatok az adatbázisba kerülnek mentésre.",
                "tags": [
                    "Setup"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "file": {
                                        "type": "string",
                                        "format": "binary",
                                        "description": "A diákokat tartalmazó CSV fájl"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Sikeresen hozzáadva: 'x' diák"
                    },
                    "400": {
                        "description": "Hiba a fájl feltöltésekor! VAGY Üres vagy érvénytelen CSV fájl!"
                    },
                    "500": {
                        "description": "Hiba a fájl feldolgozása közben"
                    },
                    "405": {
                        "description": "A metódus nem követhető"
                    }
                }
            }
        },
        "/api/setup/yearChange": {
            "post": {
                "summary": "Iskola összes adatának törlése és tanév dátumok frissítése",
                "description": "Ez az API végpont lehetővé teszi egy adott iskola összes adatának törlését az adatbázisból a megadott `school_id` alapján,hogy az új tanévet lehessen beállítani. A törlés után a tanév kezdő és záró dátumai automatikusan egy évvel későbbre állítódnak. Az alábbi táblákból történik törlés:\n\n- **locker_relationships**\n- **student_groups**\n- **group_relations**\n- **timetables**\n- **csoportok**\n- **students**\n- **admins** (kivéve rendszergazda pozíció)\n- **year_schedule** (kivéve 'kezd' és 'veg' típusok)\n- **ring_times**\n- **lockers** (ha nincsen hozzá kapcsolt locker_relationship)\n\nA törlés tranzakcióban történik, hiba esetén visszagörgetés (rollback) történik.",
                "tags": [
                    "Setup"
                ],
                "parameters": [
                    {
                        "name": "school_id",
                        "in": "query",
                        "required": true,
                        "description": "Az iskola egyedi azonosítója, amelynek az adatait törölni kell.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sikeres törlés és tanév dátumok frissítése!"
                    },
                    "400": {
                        "description": "Hiányzó school_id paraméter."
                    },
                    "500": {
                        "description": "Adatbázis hiba a törlés során, vagy hiba a tanév dátumok frissítése közben."
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett."
                    }
                }
            }
        },
        "/api/upload/uploadRinging": {
            "post": {
                "summary": "Csengetési rend feltöltése",
                "description": "Ez az API végpont a csengetési rend adatainak feltöltésére szolgál. Az adatokat egy tömb formájában várja, amelyben a csengetési időpontok kezdő és végidőpontja szerepel. Ha bármelyik adat hiányzik vagy hibás, a rendszer figyelmeztetést ad, és azt a sort kihagyja.",
                "tags": [
                    "Upload"
                ],
                "responses": {
                    "200": {
                        "description": "Csengetési rend sikeresen feltöltve!"
                    },
                    "400": {
                        "description": "A ringing tömb üres vagy hibás"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    },
                    "500": {
                        "description": "Hiba az adatok feltöltésekor"
                    }
                }
            }
        },
        "/api/upload/uploadEmployees": {
            "post": {
                "summary": "Tanárok feltöltése",
                "description": "Ez az API végpont a tanárok adatainak feltöltésére szolgál. Az adatokat egy tömb formájában várja, amely tartalmazza a tanárok nevét, pozícióját, osztályfőnökét, rövid nevét, és egy alapértelmezett jelszót generál. Ha bármelyik adat hiányzik vagy hibás, a rendszer figyelmeztetést ad, és a hibás sort kihagyja.",
                "tags": [
                    "Upload"
                ],
                "responses": {
                    "201": {
                        "description": "Tanárok sikeresen feltöltve!"
                    },
                    "400": {
                        "description": "Az employees tömb üres vagy hibás"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    },
                    "500": {
                        "description": "Hiba az adatok feltöltésekor"
                    }
                }
            }
        },
        "/api/upload/uploadGroups": {
            "post": {
                "summary": "Csoportok feltöltése",
                "description": "Ez az API végpont a csoportok adatainak feltöltésére szolgál. A POST kérés egy tömb formájában várja a csoportok neveit, és az adatokat a 'csoportok' táblába tölti fel. Ha a 'groups' tömb üres vagy hibás, a rendszer 400-as hibával válaszol. A csoportok sikeres feltöltésekor 201-es státuszkódot küld vissza a válaszban.",
                "tags": [
                    "Upload"
                ],
                "responses": {
                    "201": {
                        "description": "Csoportok sikeresen feltöltve!"
                    },
                    "400": {
                        "description": "A groups tömb üres vagy hibás"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    },
                    "500": {
                        "description": "Hiba az adatok feltöltésekor"
                    }
                }
            }
        },
        "/api/upload/uploadTimetables": {
            "post": {
                "summary": "Órarend feltöltése",
                "description": "Ez az API végpont az órarend adatainak feltöltésére szolgál. Az adatokat egy tömb formájában várja, amely tartalmazza a tanárok nevét, csoportjaikat, napokat, kezdési és befejezési időpontokat. Az adatok között szerepelhetnek több csoportok is, és ha bármelyik adat hiányzik vagy hibás, a rendszer figyelmeztetést ad és kihagyja a hibás bejegyzéseket. Az órarend sikeres feltöltése után a kapcsolódó csoportok is mentésre kerülnek.",
                "tags": [
                    "Upload"
                ],
                "responses": {
                    "201": {
                        "description": "Órarend sikeresen feltöltve!"
                    },
                    "400": {
                        "description": "A schedule tömb üres vagy hibás"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    },
                    "500": {
                        "description": "Hiba az adatok feltöltésekor"
                    }
                }
            }
        },
        "/api/upload/uploadStudLockRelations": {
            "post": {
                "summary": "Diák-szekrény kapcsolat létrehozása",
                "description": "Ez az API végpont felelős a diákok RFID-címkéjeinek és szekrényeik hozzárendelésének kezeléséért. A végpont először lekéri az összes diák RFID-címkéjét, majd hozzáadja azokat a szekrényeket a rendszerhez, amelyek a diákok számára rendelhetők. Ha nincs RFID-címke egyetlen diáknál sem, akkor hibát jelez. A szekrények és a diákok közötti kapcsolatok sikeresen feltöltésre kerülnek az adatbázisba. Ha a szekrények száma már elérte a maximális értéket, a rendszer új szekrényekhez rendeli a diákokat.",
                "tags": [
                    "Upload"
                ],
                "responses": {
                    "201": {
                        "description": "Diák-szekrény kapcsolatok sikeresen feltöltve!"
                    },
                    "400": {
                        "description": "Nem találtak RFID-címkével rendelkező diákokat"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    },
                    "500": {
                        "description": "Hiba az adatok feltöltésekor"
                    }
                }
            }
        },
        "/api/upload/uploadStudentGroups": {
            "post": {
                "summary": "Diák-csoportok  létrehozása",
                "description": "Ez az API végpont a diákok és csoportjaik közötti kapcsolatok létrehozására szolgál. A végpont először lekéri a diákok listáját, majd összeveti a diákok osztályait a meglévő csoportokkal. Ha a diák osztálya egyezik egy csoport nevével, a kapcsolatot rögzíti a 'student_groups' táblában. A sikeres művelet után a diák-csoport kapcsolatok mentésre kerülnek. Ha nem található egyező csoport, vagy ha nincs mit beilleszteni, a rendszer egy figyelmeztetést küld. A végpont csak POST kéréseket fogad.",
                "tags": [
                    "Upload"
                ],
                "responses": {
                    "201": {
                        "description": "Diák-csoport kapcsolatok sikeresen feltöltve!"
                    },
                    "400": {
                        "description": "Nem találtak megfelelő diákcsoportokat, semmi sem került beillesztésre."
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    },
                    "500": {
                        "description": "Hiba az adatok feltöltésekor"
                    }
                }
            }
        },
        "/api/locker/getLocker": {
            "get": {
                "summary": "Szekrény nyitása RFID címkével",
                "description": "Ez az API végpont lehetővé teszi a felhasználó számára, hogy ellenőrizze, hogy egy adott RFID címke hozzáféréssel rendelkezik-e egy szekrényhez. A végpont lekéri az adott RFID címkéhez tartozó adatokat az adatbázisból, és visszaadja, hogy a felhasználónak van-e engedélyezett hozzáférése, vagy ha a hozzáférés zárolt. Ezen kívül ellenőrzi a diák órarendjét is, és ha az aktuális idő tartozik az órák közé, a zár nyitva marad. Ha az RFID címke nem található, vagy nincs hozzáférése a szekrényhez, a rendszer egy hibát jelez. A végpont csak GET kéréseket fogad, és az RFID címkét a query paraméterben várja.",
                "tags": [
                    "Locker"
                ],
                "parameters": [
                    {
                        "name": "rfid",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "F7F59C7A",
                                "DA6BD581",
                                "33333333"
                            ]
                        },
                        "description": "Az RFID címke, amelynek a szekrényét nyitni szeretnénk."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sikeres lekérdezés, a zár nyitva van, vagy a szekrényhez tartozó információk visszaadása."
                    },
                    "400": {
                        "description": "RFID szükséges"
                    },
                    "404": {
                        "description": "RFID nem található VAGY Nem található szekrény_id ehhez az RFID-hez VAGY Nem található a szekrény"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    },
                    "500": {
                        "description": "Hiba az adatok lekérdezésekor"
                    }
                }
            }
        },
        "/api/locker/setLockerStatus": {
            "put": {
                "summary": "Szekrény státuszának frissítése és diák hozzáférés módosítása",
                "description": "Ez az API végpont lehetővé teszi a felhasználó számára, hogy frissítse egy adott szekrény státuszát (nyitva vagy zárva). Ha a szekrény státusza 'be', akkor a rendszer a státuszt 'ki'-ra változtatja, és fordítva. A végpont emellett frissíti a diák hozzáférését a szekrényhez (pl. 'zarva'). Ha a szekrényhez nincs társított diák, vagy ha a státusz frissítése nem sikerült, hibaüzenet kerül visszaküldésre. A végpont csak PATCH kéréseket fogad, és a szekrény azonosítóját (id) query paraméterként várja.",
                "tags": [
                    "Locker"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "5",
                                "6",
                                "7"
                            ]
                        },
                        "description": "A szekrény azonosítója, amelynek a státuszát módosítani szeretnénk."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sikeres státusz frissítés, a szekrény státusza és a diák hozzáférése frissítve lett."
                    },
                    "400": {
                        "description": "Érvénytelen locker_id"
                    },
                    "404": {
                        "description": "Szekrény nem található VAGY Nincs társított diák ehhez a szekrényhez"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    },
                    "500": {
                        "description": "Hiba az adatok feltöltésekor VAGY Sikertelen szekrény státusz frissítés VAGY Sikertelen diák access frissítés"
                    }
                }
            }
        },
        "/api/system/getSchool": {
            "get": {
                "summary": "Iskola nevének lekérdezése azonosító alapján",
                "description": "Ez az API végpont lehetővé teszi egy iskola nevének lekérdezését az iskola egyedi azonosítója (**school_id**) alapján.\n\nA kérés során az URL query paraméterében kell megadni a **school_id** értékét.",
                "tags": [
                    "System"
                ],
                "parameters": [
                    {
                        "name": "school_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "1",
                                "2",
                                "3"
                            ]
                        },
                        "description": "Az iskola egyedi azonosítója"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sikeres lekérdezés, az iskola neve visszatérve"
                    },
                    "400": {
                        "description": "Hiányzó vagy érvénytelen school_id paraméter"
                    },
                    "404": {
                        "description": "Iskola nem található a megadott azonosítóval"
                    },
                    "500": {
                        "description": "Hiba az adatok lekérdezésekor az adatbázisból"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett (csak GET kérés megengedett)"
                    }
                }
            }
        },
        "/api/system/closeOpen": {
            "post": {
                "summary": "Rendszer hozzáférési állapotának frissítése",
                "description": "Ez az API végpont lehetővé teszi a felhasználó számára, hogy frissítse a rendszer hozzáférési állapotát (nyitott vagy zárt). Ha az 'action' értéke 'close', akkor a rendszer státusza 'zarva' lesz, ha pedig 'open', akkor 'nyithato'. A 'school_id' az iskola azonosítója. A végpont a 'system_status' táblában található 'status' mezőt frissíti. Az 'action' és 'school_id' paraméterek a kérés body-jában kerülnek átadásra. Csak POST kérések engedélyezettek.",
                "tags": [
                    "System"
                ],
                "parameters": [],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "action": {
                                        "type": "string",
                                        "description": "Művelet típusa. Lehetséges értékek: 'close' vagy 'open'."
                                    },
                                    "school_id": {
                                        "type": "integer",
                                        "description": "Az iskola azonosítója."
                                    }
                                },
                                "required": [
                                    "action",
                                    "school_id"
                                ]
                            },
                            "examples": {
                                "Első iskola": {
                                    "value": {
                                        "action": "close",
                                        "school_id": 1
                                    }
                                },
                                "Második iskola": {
                                    "value": {
                                        "action": "open",
                                        "school_id": 2
                                    }
                                },
                                "Harmadik iskola": {
                                    "value": {
                                        "action": "close",
                                        "school_id": 3
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Az összes diák 'access' mezője és a 'status' mező sikeresen frissítve."
                    },
                    "400": {
                        "description": "Érvénytelen 'action'. Az 'action' csak 'close' vagy 'open' lehet."
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett. Csak POST kérés engedélyezett."
                    },
                    "500": {
                        "description": "Nem sikerült frissíteni az 'access' és 'status' állapotot."
                    }
                }
            }
        },
        "/api/system/status": {
            "get": {
                "summary": "A rendszer státuszának lekérdezése",
                "description": "Ez az API végpont a rendszer aktuális státuszának lekérdezésére szolgál. A végpont egyetlen rekordot olvas ki a 'system_status' táblából, amely a rendszer állapotát tárolja. A lekérdezés az adott státuszt (például 'zarva' vagy 'nyithato') adja vissza. A lekérdezés sikeressége esetén a rendszer egy JSON választ küld, amely tartalmazza a státusz értékét. Ha az adatbázisban nincs elérhető státusz, akkor a végpont egy 404-es hibát küld vissza. Ha a lekérdezés során hiba történik (például adatbázis-kapcsolati probléma), akkor egy 500-as hibaüzenetet kap a kliens. A végpont kizárólag GET metódussal érhető el, más HTTP metódusok használata esetén 405-ös hibakódot ad vissza.",
                "tags": [
                    "System"
                ],
                "parameters": [
                    {
                        "name": "school_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "1",
                                "2",
                                "3"
                            ]
                        },
                        "description": "Az iskola egyedi azonosítója"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "'zarva' vagy 'nyithato' státusz visszaküldve"
                    },
                    "400": {
                        "description": "A rendszer státusza nem található"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    },
                    "500": {
                        "description": "Hiba az adatok lekérdezésekor"
                    }
                }
            }
        },
        "/api/system/studentAccess": {
            "post": {
                "summary": "Diák engedélyezése a szekrényhez",
                "description": "Ez az API végpont lehetővé teszi a felhasználó számára, hogy egy adott diák RFID hozzáférését frissítse az adatbázisban. A végpont egy adott diák azonosítójához (student_id) rendelt hozzáférési státuszt módosítja 'nyitható' értékre.",
                "tags": [
                    "System"
                ],
                "parameters": [
                    {
                        "name": "student",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "OM7000",
                                "OM7001",
                                "OM7002",
                                "OM7003"
                            ]
                        },
                        "description": "A diák azonosítója, akinek az 'access' mezőjét frissíteni szeretnénk."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "'xy' diák 'access' frissítve nyithato-ra"
                    },
                    "400": {
                        "description": "'student_id' hiányzik"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    },
                    "500": {
                        "description": "Hiba az adatok feltöltésekor"
                    }
                }
            }
        },
        "/api/system/groupAccess": {
            "post": {
                "summary": "Egy csoport engedélyezése a szekrényhez",
                "description": "Ez az API végpont lehetővé teszi egy adott csoporthoz tartozó diákok RFID hozzáférésének frissítését az adatbázisban. A végpont a megadott diákokhoz (student_id) rendelt hozzáférési státuszokat módosítja 'nyitható' értékre.",
                "tags": [
                    "System"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "students": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "description": "A diákok azonosítóinak listája, akiknek az 'access' mezőjét frissíteni szeretnénk.",
                                        "example": [
                                            "OM7000",
                                            "OM7001",
                                            "OM7002",
                                            "OM7003"
                                        ]
                                    }
                                },
                                "required": [
                                    "students"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "A megadott diákok 'access' frissítve 'nyitható'-ra"
                    },
                    "400": {
                        "description": "'students' tömb hiányzik vagy üres"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    },
                    "500": {
                        "description": "Hiba az adatok frissítésekor"
                    }
                }
            }
        },
        "/api/timetable/getClassTimetable": {
            "get": {
                "summary": "Egy adott osztály órarendjének lekérdezése",
                "description": "Ez az API végpont egy adott osztályhoz tartozó órarend lekérdezésére szolgál. A lekérdezés az 'osztály' paraméter alapján történik, amely a csoport nevét adja meg. Az eredmény egy JSON tömb, amely az adott osztály órarendjének adatait tartalmazza, beleértve a hét napját, az óra kezdési és befejezési időpontját, az osztály és a csoport nevét, valamint a tanár rövid nevét. Az adatok a hét napja szerint és időrendben vannak rendezve.",
                "tags": [
                    "Timetable"
                ],
                "parameters": [
                    {
                        "name": "className",
                        "in": "query",
                        "description": "Az osztály neve, amelynek az órarendjét le szeretnénk kérdezni. A keresés részleges egyezéssel történik.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "13.I",
                                "12.D",
                                "11.D"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sikeres válasz, amely az adott osztály órarendjét tartalmazza.",
                        "content": {
                            "application/json": {
                                "example": [
                                    {
                                        "day_of_week": "monday",
                                        "start_time": "08:00:00",
                                        "end_time": "08:45:00",
                                        "class": "10.A",
                                        "group_name": "Matematika",
                                        "teacher_name": "Kovacs"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Hiányzik 'class' paraméter!"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett."
                    },
                    "500": {
                        "description": "Hiba az adatok lekérdezésekor"
                    }
                }
            }
        },
        "/api/timetable/getTeacherTimetable": {
            "get": {
                "summary": "Egy adott tanár órarendjének lekérdezése",
                "description": "Ez az API végpont egy adott tanárhoz tartozó órarend lekérdezésére szolgál. A lekérdezés a 'teacherName' paraméter alapján történik, amely a tanár rövid nevét adja meg. Az eredmény egy JSON tömb, amely az adott tanár órarendjének adatait tartalmazza, beleértve a hét napját, az óra kezdési és befejezési időpontját, a csoportok neveit és a tanár nevét. Az adatok a hét napja szerint és időrendben vannak rendezve.",
                "tags": [
                    "Timetable"
                ],
                "parameters": [
                    {
                        "name": "teacherName",
                        "in": "query",
                        "description": "A tanár rövid neve, akinek az órarendjét le szeretnénk kérdezni.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "PaZo",
                                "BeMo",
                                "CzKa"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sikeres válasz, amely az adott tanár órarendjét tartalmazza.",
                        "content": {
                            "application/json": {
                                "example": [
                                    {
                                        "day_of_week": "monday",
                                        "start_time": "08:00:00",
                                        "end_time": "08:45:00",
                                        "class": "10.A, 11.B",
                                        "group_name": "Matematika",
                                        "teacher_name": "Kovacs"
                                    }
                                ]
                            }
                        }
                    },
                    "400": {
                        "description": "Hiányzik 'teacherName' paraméter!"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett."
                    },
                    "500": {
                        "description": "Hiba az adatok lekérdezésekor."
                    }
                }
            }
        },
        "/api/timetable/allScheduleStart": {
            "get": {
                "summary": "Diákok napi első és utolsó órájának lekérdezése",
                "description": "Ez az API végpont visszaadja az adott napi órarend alapján a diákok első és utolsó tanórájának időpontját. Az adatok a nap aktuális dátuma alapján kerülnek lekérdezésre.",
                "tags": [
                    "Timetable"
                ],
                "parameters": [
                    {
                        "name": "school_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "1",
                                "2",
                                "3"
                            ]
                        },
                        "description": "Az iskola egyedi azonosítója"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sikeres válasz, amely tartalmazza a diákok első és utolsó tanórájának kezdési és befejezési időpontját."
                    },
                    "404": {
                        "description": "Nincs tanóra a mai nap!"
                    },
                    "500": {
                        "description": "Hiba az adatok lekérdezésekor"
                    }
                }
            }
        },
        "/api/timetable/scheduleStart": {
            "get": {
                "summary": "egy adott diák napi első és utolsó órájának lekérdezése",
                "description": "Ez az API végpont visszaadja az adott napi órarend alapján egy diáknak első és utolsó tanórájának időpontját. Az adatok a nap aktuális dátuma alapján kerülnek lekérdezésre.",
                "tags": [
                    "Timetable"
                ],
                "parameters": [
                    {
                        "name": "student",
                        "in": "query",
                        "description": "A dátum, amelynek az órarendjét le szeretnénk kérdezni. Formátum: YYYY-MM-DD. Ha nincs megadva, akkor a mai napra vonatkozó adatokat adja vissza.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "OM7000",
                                "OM7001",
                                "OM7002",
                                "OM7003"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sikeres válasz, amely tartalmazza a diákok első és utolsó tanórájának kezdési és befejezési időpontját."
                    },
                    "400": {
                        "description": "Hiányzó 'student_id'!"
                    },
                    "404": {
                        "description": "Nincs tanóra a megadott napon!"
                    },
                    "500": {
                        "description": "Hiba az adatok lekérdezésekor"
                    }
                }
            }
        },
        "/api/students/create": {
            "post": {
                "summary": "Új diák létrehozása",
                "description": "Ez az API végpont lehetővé teszi egy új diák hozzáadását a rendszerhez a megadott adatokkal. A sikeres regisztráció után a rendszer automatikusan létrehoz egy szekrényt a diáknak és hozzárendeli az RFID címkéjéhez.",
                "tags": [
                    "Students"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "student_id": {
                                        "type": "string",
                                        "description": "A diák egyedi OM azonosítója."
                                    },
                                    "full_name": {
                                        "type": "string",
                                        "description": "A diák teljes neve."
                                    },
                                    "class": {
                                        "type": "string",
                                        "description": "A diák osztálya."
                                    },
                                    "rfid_tag": {
                                        "type": "string",
                                        "description": "A diákhoz tartozó RFID címke azonosítója."
                                    },
                                    "school_id": {
                                        "type": "string",
                                        "description": "A diákhoz tartozó iskola azonosító."
                                    }
                                },
                                "required": [
                                    "student_id",
                                    "full_name",
                                    "class",
                                    "rfid_tag",
                                    "school_id"
                                ]
                            },
                            "examples": {
                                "Első diák": {
                                    "value": {
                                        "student_id": "OM11111",
                                        "full_name": "Kiss Péter",
                                        "class": "13..A",
                                        "rfid_tag": "11111111",
                                        "school_id": "1"
                                    }
                                },
                                "Második diák": {
                                    "value": {
                                        "student_id": "OM22222",
                                        "full_name": "Nagy Anna",
                                        "class": "13.I",
                                        "rfid_tag": "22222222",
                                        "school_id": "1"
                                    }
                                },
                                "Harmadik diák": {
                                    "value": {
                                        "student_id": "OM33333",
                                        "full_name": "Tóth Dávid",
                                        "class": "13.I",
                                        "rfid_tag": "33333333",
                                        "school_id": "1"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Sikeresen létrehozott diák."
                    },
                    "400": {
                        "description": "Hiányzó kötelező mezők."
                    },
                    "500": {
                        "description": "Hiba a diák létrehozása során."
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett."
                    }
                }
            }
        },
        "/api/students/read": {
            "get": {
                "summary": "Diákok lekérése",
                "description": "Ez az API végpont a diákok adatainak lekérésére szolgál. Az adatbázisból lekérdezi az összes diák adatait, beleértve az RFID címkéjüket és egyéb releváns információkat. Ha a diákhoz tartozik egy szekrénykapcsolat, akkor a rendszer csatolja hozzá a szekrény aktuális státuszát is. Az adatokat az `students` táblából nyeri ki, amelyet bal oldali csatlakozással (`LEFT JOIN`) összekapcsol a `locker_relationships` és `lockers` táblákkal. A válasz JSON formátumban tartalmazza a diákok listáját és esetlegesen a hozzárendelt szekrények állapotát.",
                "tags": [
                    "Students"
                ],
                "parameters": [
                    {
                        "name": "school_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "1",
                                "2",
                                "3"
                            ]
                        },
                        "description": "Az iskola egyedi azonosítója"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sikeres lekérés"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    },
                    "500": {
                        "description": "Hiba az adatok lekérésénél"
                    }
                }
            }
        },
        "/api/students/update": {
            "put": {
                "summary": "Diák adatainak frissítése",
                "description": "Ez az API végpont a diákok adatainak frissítésére szolgál. A frissítés magában foglalja a diák nevének, osztályának és RFID címkéjének módosítását. Ha az RFID címke változik, a rendszer új diákot hoz létre és a szekrény kapcsolatot is frissíti.",
                "tags": [
                    "Students"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "student_id": {
                                        "type": "string",
                                        "description": "A diák egyedi azonosítója."
                                    },
                                    "full_name": {
                                        "type": "string",
                                        "description": "A diák teljes neve."
                                    },
                                    "class": {
                                        "type": "string",
                                        "description": "A diák osztálya."
                                    },
                                    "rfid_tag": {
                                        "type": "string",
                                        "description": "A diák RFID címkéje."
                                    }
                                },
                                "required": [
                                    "student_id",
                                    "full_name",
                                    "class",
                                    "rfid_tag",
                                    "school_id"
                                ]
                            },
                            "examples": {
                                "Első diák": {
                                    "value": {
                                        "student_id": "OM11111",
                                        "full_name": "Kiss Péter Sándor",
                                        "class": "13..A",
                                        "rfid_tag": "11122211",
                                        "school_id": "1"
                                    }
                                },
                                "Második diák": {
                                    "value": {
                                        "student_id": "OM22222",
                                        "full_name": "Nagy Anna Natasa",
                                        "class": "13.I",
                                        "rfid_tag": "22222222",
                                        "school_id": "1"
                                    }
                                },
                                "Harmadik diák": {
                                    "value": {
                                        "student_id": "OM33333",
                                        "full_name": "Kis Pista Lukács János",
                                        "class": "11.I",
                                        "rfid_tag": "33333333",
                                        "school_id": "1"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sikeres frissítés vagy sikeres új diák és szekrény kapcsolat létrehozása."
                    },
                    "400": {
                        "description": "Hiányzó vagy érvénytelen mezők."
                    },
                    "404": {
                        "description": "A diák nem található vagy szekrény kapcsolat nem található."
                    },
                    "500": {
                        "description": "Hiba történt a diák adatainak frissítése során."
                    }
                }
            }
        },
        "/api/students/delete": {
            "delete": {
                "summary": "Diák törlése",
                "description": "Ez az API végpont lehetővé teszi egy diák törlését az adatbázisból. A törlés során a rendszer eltávolítja a diákhoz kapcsolódó összes adatot, beleértve a locker kapcsolatokat is. Ha a megadott `student_id` nem található, hibaüzenet kerül visszaküldésre. Csak HTTP DELETE kéréseket fogad.",
                "tags": [
                    "Students"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "student_id": {
                                        "type": "string",
                                        "description": "A törlendő diák OM azonosítója."
                                    }
                                },
                                "required": [
                                    "student_id"
                                ]
                            },
                            "examples": {
                                "Első diák": {
                                    "value": {
                                        "student_id": "OM11111"
                                    }
                                },
                                "Második diák": {
                                    "value": {
                                        "student_id": "OM22222"
                                    }
                                },
                                "Harmadik diák": {
                                    "value": {
                                        "student_id": "OM33333"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sikeres törlés"
                    },
                    "400": {
                        "description": "Hiányzó student_id"
                    },
                    "404": {
                        "description": "A diák nem található"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    },
                    "500": {
                        "description": "Hiba történt a diák törlése során"
                    }
                }
            }
        },
        "/api/students/setStudentGroups": {
            "post": {
                "summary": "Egy diák csoportokba rendezése",
                "description": "Ez a végpont lehetővé teszi egy diák csoportokba történő rendezését. Ha új diákot hozol létre vagy egy meglévő diák adatait frissíted, a rendszer az adott diákhoz tartozó osztálynevek alapján meghatározza, mely csoportokhoz tartozik. A diák a megadott osztálynevek alapján kerül hozzárendelésre a csoportokhoz, amennyiben ezek az osztályok már léteznek a rendszerben. Ha a diák nem található az adatbázisban, a rendszer hibaüzenetet küld. Ha a diák már szerepel a csoportokban, akkor azok először törlésre kerülnek, majd az új csoportok kerülnek hozzáadásra. A rendszer visszajelzést ad a csoportokba való sikeres hozzárendelésről vagy annak hiányáról.",
                "tags": [
                    "Students"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "student_id": {
                                        "type": "string",
                                        "description": "A törlendő diák OM azonosítója."
                                    }
                                },
                                "required": [
                                    "student_id"
                                ]
                            },
                            "examples": {
                                "Első diák": {
                                    "value": {
                                        "student_id": "OM11111"
                                    }
                                },
                                "Második diák": {
                                    "value": {
                                        "student_id": "OM22222"
                                    }
                                },
                                "Harmadik diák": {
                                    "value": {
                                        "student_id": "OM33333"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Nem találtam csoport egyezést"
                    },
                    "201": {
                        "description": "Sikeres csoportba rendezés"
                    },
                    "400": {
                        "description": "Hiányzó student_id"
                    },
                    "404": {
                        "description": "A diák nem található"
                    },
                    "500": {
                        "description": "Hiba az adatok feltöltésekor"
                    },
                    "405": {
                        "description": "A metódus nem követhető"
                    }
                }
            }
        },
        "/api/config/getRinging": {
            "get": {
                "summary": "Csengetési rend lekérdezése",
                "description": "Ez az API végpont lehetővé teszi a csengetési rend lekérdezését a rendszerben. A válaszban a csengetési időpontok kerülnek visszaküldésre, azaz a kezdési és befejezési időpontok formázott órák és percek szerint. A válasz formátuma tartalmazza a kezdési és befejezési időpontokat az 'HH:mm' formátumban.",
                "tags": [
                    "Config"
                ],
                "parameters": [
                    {
                        "name": "school_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "1",
                                "2",
                                "3"
                            ]
                        },
                        "description": "Az iskola egyedi azonosítója"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A csengetési rend sikeresen lekérdezve"
                    },
                    "500": {
                        "description": "Hiba a csengetési rend lekérdezésekor"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    }
                }
            }
        },
        "/api/config/changePassword": {
            "post": {
                "summary": "Jelszó módosítása",
                "description": "Ez az API végpont lehetővé teszi a bejelentkezett adminisztrátorok számára a jelszó módosítását. A felhasználónak meg kell adnia a régi jelszavát és az új jelszót. A rendszer ellenőrzi a régi jelszót, majd ha az helyes, az új jelszót titkosítva tárolja.",
                "tags": [
                    "Config"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "oldPassword": {
                                        "type": "string",
                                        "example": "currentPassword123"
                                    },
                                    "newPassword": {
                                        "type": "string",
                                        "example": "newSecurePassword456"
                                    }
                                },
                                "required": [
                                    "oldPassword",
                                    "newPassword"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Jelszó sikeresen módosítva"
                    },
                    "400": {
                        "description": "Minden mezőt ki kell tölteni VAGY Hibás régi jelszó."
                    },
                    "401": {
                        "description": "Nincs bejelentkezve"
                    },
                    "500": {
                        "description": "Hiba a jelszó módosítása során."
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    }
                }
            }
        },
        "/api/config/getEmployees": {
            "get": {
                "summary": "Admin alkalmazottak lekérdezése",
                "description": "Ez az API végpont lehetővé teszi az adminisztrátorok adatainak lekérdezését a rendszerből. A lekérdezés visszaadja az adminisztrátorok listáját, amely tartalmazza az adminisztrátorok azonosítóját, teljes nevét, rövid nevét, pozícióját és osztályfőnöküket. A válasz sikeres végrehajtása esetén egy JSON objektumot ad vissza, amely tartalmazza az összes adminisztrátor adatait.",
                "tags": [
                    "Config"
                ],
                "parameters": [
                    {
                        "name": "school_id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "1",
                                "2",
                                "3"
                            ]
                        },
                        "description": "Az iskola egyedi azonosítója"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sikeresen lekérdezett adminisztrátorok"
                    },
                    "500": {
                        "description": "Hiba az adminisztrátorok lekérdezése során"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    }
                }
            }
        },
        "/api/config/addEmployee": {
            "post": {
                "summary": "Új alkalmazott létrehozása",
                "description": "Ez az API végpont lehetővé teszi egy új alkalmazott hozzáadását a rendszerhez a megadott adatokkal. A sikeres regisztráció után a rendszer automatikusan generál egy jelszót, amelyet a válaszban visszaküld. Kötelező mezők: teljes név, pozíció, osztályfőnöki státusz, rövid név.",
                "tags": [
                    "Config"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "full_name": {
                                        "type": "string",
                                        "description": "Az alkalmazott teljes neve."
                                    },
                                    "position": {
                                        "type": "string",
                                        "description": "Az alkalmazott pozíciója."
                                    },
                                    "osztalyfonok": {
                                        "type": "string",
                                        "description": "Az alkalmazott osztályfőnöki státusza (Igen/Nincs)."
                                    },
                                    "short_name": {
                                        "type": "string",
                                        "description": "Az alkalmazott rövidített neve."
                                    },
                                    "school_id": {
                                        "type": "string",
                                        "description": "Az iskola egyedi azonosítója."
                                    }
                                },
                                "required": [
                                    "full_name",
                                    "position",
                                    "osztalyfonok",
                                    "short_name",
                                    "school_id"
                                ]
                            },
                            "examples": {
                                "Fejlesztő alkalmazott": {
                                    "value": {
                                        "full_name": "Kiss Péter",
                                        "position": "Fejlesztő",
                                        "osztalyfonok": "Nincs",
                                        "short_name": "KKKK",
                                        "school_id": "1"
                                    }
                                },
                                "Tanár alkalmazott": {
                                    "value": {
                                        "full_name": "Nagy Éva",
                                        "position": "Tanár",
                                        "osztalyfonok": "Nincs",
                                        "short_name": "NNNN",
                                        "school_id": "1"
                                    }
                                },
                                "Adminisztrátor alkalmazott": {
                                    "value": {
                                        "full_name": "Szabó Gábor",
                                        "position": "Portás",
                                        "osztalyfonok": "Nincs",
                                        "short_name": "SSSS",
                                        "school_id": "1"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Sikeresen hozzáadott alkalmazott!"
                    },
                    "400": {
                        "description": "Hiányzó kötelező mezők"
                    },
                    "500": {
                        "description": "Hiba a hozzáadás során"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    }
                }
            }
        },
        "/api/config/updateEmployee": {
            "put": {
                "summary": "Alkalmazottak frissítése",
                "description": "Ez az API végpont lehetővé teszi egy adminisztrátor adatainak frissítését a megadott adatokkal. Az adminisztrátor frissítése során meg kell adni az adminisztrátor egyedi azonosítóját (admin_id), teljes nevét, pozícióját és osztályfőnökét. A sikeres frissítés után a rendszer válaszol a frissített adatokkal. Amennyiben bármelyik kötelező mező hiányzik, a szerver hibát ad vissza. Ha a frissítés sikeres, a válaszban visszaküldi a frissített adminisztrátor adatait.",
                "tags": [
                    "Config"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "admin_id": {
                                        "type": "string",
                                        "description": "Az adminisztrátor egyedi azonosítója."
                                    },
                                    "full_name": {
                                        "type": "string",
                                        "description": "Az adminisztrátor teljes neve."
                                    },
                                    "position": {
                                        "type": "string",
                                        "description": "Az adminisztrátor beosztása."
                                    },
                                    "osztalyfonok": {
                                        "type": "string",
                                        "description": "Az admin által felügyelt osztály (ha van)."
                                    },
                                    "school_id": {
                                        "type": "string",
                                        "description": "Az iskola egyedi azonosítója."
                                    }
                                },
                                "required": [
                                    "admin_id",
                                    "full_name",
                                    "position",
                                    "osztalyfonok",
                                    "school_id"
                                ]
                            },
                            "examples": {
                                "Első alkalmazott": {
                                    "value": {
                                        "admin_id": "65",
                                        "full_name": "Kovács Gábor",
                                        "position": "Rendszergazda",
                                        "osztalyfonok": "Nincs",
                                        "school_id": "1"
                                    }
                                },
                                "Második alkalmazott": {
                                    "value": {
                                        "admin_id": "66",
                                        "full_name": "Szabó Anna",
                                        "position": "Igazgató",
                                        "osztalyfonok": "Nincs",
                                        "school_id": "1"
                                    }
                                },
                                "Harmadik alkalmazott": {
                                    "value": {
                                        "admin_id": "67",
                                        "full_name": "Tóth László",
                                        "position": "Tanár",
                                        "osztalyfonok": "Nincs",
                                        "school_id": "1"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sikeres frissítés"
                    },
                    "400": {
                        "description": "Hiányzó kötelező mezők"
                    },
                    "500": {
                        "description": "Hiba a frissítés során"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    }
                }
            }
        },
        "/api/config/deleteEmployee": {
            "delete": {
                "summary": "Alkalmazottak törlése",
                "description": "Ez az API végpont lehetővé teszi egy adminisztrátor törlését az admin ID alapján. Az admin ID paramétert a kérés query paramétereként kell megadni. Az ID értéke nem lehet 1 (illetve egyéb esetekben a kódba hardkódolt tiltott ID-k). Ha az ID nem található az adatbázisban, a rendszer hibaüzenetet ad vissza.",
                "tags": [
                    "Config"
                ],
                "parameters": [
                    {
                        "name": "admin_id",
                        "in": "query",
                        "required": true,
                        "description": "Az adminisztrátor egyedi azonosítója, amelyet törölni kívánunk.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "65",
                                "66",
                                "67"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sikeresen törölt adminisztrátor",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sikeres törlés"
                                        },
                                        "deletedId": {
                                            "type": "string",
                                            "example": "2"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Hiányzó ID paraméter vagy tiltott ID érték"
                    },
                    "404": {
                        "description": "Nem található adminisztrátor az adott ID-val"
                    },
                    "500": {
                        "description": "Hiba a törlés során"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    }
                }
            }
        },
        "/api/config/getYearSchedule": {
            "get": {
                "summary": "Évkezdési és évzárási információk lekérdezése",
                "description": "Ez az API végpont lehetővé teszi az év kezdési és zárási időpontjainak, valamint a szünnapok és plusznapok adatainak lekérdezését. Az API a megadott típusú adatokat adja vissza a lekérdezés alapján. Támogatott típusok: 'plusznap', 'szunet', 'tanitasnelkul', 'kezd', 'veg'. A válasz formátuma a típusnak megfelelően változik.",
                "tags": [
                    "Config"
                ],
                "parameters": [
                    {
                        "name": "school_id",
                        "in": "query",
                        "required": true,
                        "description": "Az iskola egyedi azonosítója.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "1",
                                "2",
                                "3"
                            ]
                        }
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "required": true,
                        "description": "A lekérdezés típusa. Lehet: 'plusznap', 'szunet', 'tanitasnelkul', 'kezd', 'veg'.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "plusznap",
                                "szunet",
                                "tanitasnelkul",
                                "kezd",
                                "veg"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sikeres lekérdezés"
                    },
                    "400": {
                        "description": "Hiányzó kötelező paraméter"
                    },
                    "404": {
                        "description": "Nincs találat a lekérdezéshez"
                    },
                    "500": {
                        "description": "Hiba a lekérdezés során"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    }
                }
            }
        },
        "/api/config/setYearStartEnd": {
            "post": {
                "summary": "Évfolyam beosztás frissítése",
                "description": "Ez az API végpont lehetővé teszi az évfolyam beosztásának frissítését a megadott típus (kezd vagy veg) és nap (which_day) alapján. A típusnak 'kezd' vagy 'veg' kell lennie, és a napnak érvényes dátumnak kell lennie. Ha a frissítés sikeres, a rendszer visszaküldi a frissített típust és napot.",
                "tags": [
                    "Config"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "A beosztás típusa ('kezd' vagy 'veg')."
                                    },
                                    "which_day": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "A frissített nap dátuma (ÉÉÉÉ-HH-NN formátumban)."
                                    },
                                    "school_id": {
                                        "type": "string",
                                        "description": "Az iskola egyedi azonosítója."
                                    }
                                },
                                "required": [
                                    "type",
                                    "which_day",
                                    "school_id"
                                ]
                            },
                            "examples": {
                                "Első példa": {
                                    "value": {
                                        "type": "kezd",
                                        "which_day": "2025-03-01",
                                        "school_id": "1"
                                    }
                                },
                                "Második példa": {
                                    "value": {
                                        "type": "veg",
                                        "which_day": "2025-06-15",
                                        "school_id": "2"
                                    }
                                },
                                "Harmadik példa": {
                                    "value": {
                                        "type": "kezd",
                                        "which_day": "2025-09-01",
                                        "school_id": "3"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sikeres frissítés",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sikeres frissítés"
                                        },
                                        "updatedType": {
                                            "type": "string",
                                            "example": "kezd"
                                        },
                                        "updatedDate": {
                                            "type": "string",
                                            "example": "2025-03-01"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Hiányzó kötelező paraméterek vagy érvénytelen típus"
                    },
                    "404": {
                        "description": "A megfelelő rekord nem található"
                    },
                    "500": {
                        "description": "Hiba a frissítés során"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    }
                }
            }
        },
        "/api/config/addPlusBreak": {
            "post": {
                "summary": "Új évszak bejegyzés hozzáadása",
                "description": "Ez az API végpont lehetővé teszi egy új évszak bejegyzés (szünet, plusznap vagy tanítás nélküli nap) hozzáadását a rendszerhez. A bejegyzés hozzáadásához meg kell adni a típusát, nevét, az érintett napot és az azt helyettesítő napot. A sikeres hozzáadás után a válasz tartalmazza a frissített adatokat.",
                "tags": [
                    "Config"
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "A bejegyzés típusa. Értékek: 'szunet', 'plusznap', 'tanitasnelkul'."
                                    },
                                    "nev": {
                                        "type": "string",
                                        "description": "A bejegyzés neve vagy leírása (pl. 'Karácsonyi szünet')."
                                    },
                                    "which_day": {
                                        "type": "string",
                                        "description": "A dátum, amely a bejegyzéshez kapcsolódik (pl. '2024-12-21')."
                                    },
                                    "replace_day": {
                                        "type": "string",
                                        "description": "Ha a típus 'plusznap', akkor adja meg, melyik napra cseréli (pl. 'monday')."
                                    },
                                    "school_id": {
                                        "type": "string",
                                        "description": "Az iskola egyedi azonosítója."
                                    }
                                },
                                "required": [
                                    "type",
                                    "nev",
                                    "which_day",
                                    "replace_day",
                                    "school_id"
                                ]
                            },
                            "examples": {
                                "Karácsonyi szünet": {
                                    "value": {
                                        "type": "szunet",
                                        "nev": "Karácsonyi szünet",
                                        "which_day": "2024-12-24",
                                        "replace_day": "",
                                        "school_id": "1"
                                    }
                                },
                                "Plusz nap tanítás": {
                                    "value": {
                                        "type": "plusznap",
                                        "nev": "Pótnap tanítás",
                                        "which_day": "2025-02-01",
                                        "replace_day": "monday",
                                        "school_id": "2"
                                    }
                                },
                                "Tanítás nélküli nap": {
                                    "value": {
                                        "type": "tanitasnelkul",
                                        "nev": "",
                                        "which_day": "2025-03-15",
                                        "replace_day": "2025-03-16",
                                        "school_id": "3"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sikeres frissítés",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sikeres frissítés"
                                        },
                                        "updatedType": {
                                            "type": "string",
                                            "example": "szunet"
                                        },
                                        "updatedDate": {
                                            "type": "string",
                                            "example": "2024-12-21"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Hiányzó paraméterek vagy érvénytelen típus"
                    },
                    "500": {
                        "description": "Hiba a hozzáadás során"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    }
                }
            }
        },
        "/api/config/deletePlusBreak": {
            "delete": {
                "summary": "Évterv törlése",
                "description": "Ez az API végpont lehetővé teszi egy évterv törlését a megadott azonosító alapján. A törlés előtt ellenőrzi, hogy a megadott ID létezik-e, és nem lehet 1 vagy 2. Ha a törlés sikeres, a válaszban visszaküldi a törölt ID-t.",
                "tags": [
                    "Config"
                ],
                "parameters": [
                    {
                        "name": "year_schedule_id",
                        "in": "query",
                        "required": true,
                        "description": "Az évterv azonosítója, amelyet törölni szeretnénk.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "7",
                                "8",
                                "9"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Sikeres törlés",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Sikeres törlés"
                                        },
                                        "deletedId": {
                                            "type": "string",
                                            "example": "3"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Hiányzó ID paraméter vagy érvénytelen ID"
                    },
                    "404": {
                        "description": "Nem található rekord ezzel az ID-val"
                    },
                    "500": {
                        "description": "Hiba a törlés során"
                    },
                    "405": {
                        "description": "A HTTP metódus nem engedélyezett"
                    }
                }
            }
        }
    }
}