1. Lekérdezés a diákok szekrény státusz történetének lekérdezésére**
Ez a lekérdezés megjeleníti minden diák teljes nevét, a szekrény azonosítóját, a jelenlegi szekrény státuszt (nyitva/zárva) és az utolsó státuszváltozás időpontját.


SELECT 
    students.full_name,
    lockers.locker_id,
    lockers.status,
    lockers.status_changed_at
FROM 
    locker_relationships
JOIN 
    students ON locker_relationships.rfid_tag = students.rfid_tag
JOIN 
    lockers ON locker_relationships.locker_id = lockers.locker_id;







2. Lekérdezés a diákok időpontok átfedésének ellenőrzésére**
Ez a lekérdezés megkeresi azokat a diákokat, akiknek az órái átfedésben vannak (az egyik óra kezdete előtt ér véget egy másik óra ugyanazon a napon).


SELECT 
    t1.student_id, 
    s.full_name, 
    t1.subject_id, 
    t1.day_of_week, 
    t1.start_time, 
    t1.end_time, 
    t2.subject_id AS overlapping_subject_id, 
    t2.start_time AS overlapping_start_time, 
    t2.end_time AS overlapping_end_time
FROM 
    timetables t1
JOIN 
    timetables t2 ON t1.student_id = t2.student_id 
                  AND t1.day_of_week = t2.day_of_week 
                  AND t1.start_time < t2.end_time 
                  AND t1.end_time > t2.start_time
JOIN 
    students s ON t1.student_id = s.student_id
WHERE 
    t1.timetable_id <> t2.timetable_id;










3. Lekérdezés azokról a diákokról, akiknek nincs órájuk adott napon**
Ez a lekérdezés megtalálja azokat a diákokat, akiknek nincsenek óráik például hétfőn.


SELECT 
    s.student_id, 
    s.full_name 
FROM 
    students s
LEFT JOIN 
    timetables t ON s.student_id = t.student_id 
                 AND t.day_of_week = 'Monday'
WHERE 
    t.student_id IS NULL;










4.Lekérdezés a legtöbb órát tartó tanárokra**
Ez a lekérdezés megjeleníti a tanárokat a tanított órák száma alapján, csökkenő sorrendben.


SELECT 
    subjects.teacher_name, 
    COUNT(timetables.subject_id) AS class_count
FROM 
    timetables
JOIN 
    subjects ON timetables.subject_id = subjects.subject_id
GROUP BY 
    subjects.teacher_name
ORDER BY 
    class_count DESC;








5.Lekérdezés a legtöbbször státuszt váltó szekrényekre**
Ez a lekérdezés megtalálja azokat a szekrényeket, amelyek a leggyakrabban váltották a státuszukat.


SELECT 
    lockers.locker_id, 
    COUNT(lockers.status_changed_at) AS status_change_count
FROM 
    lockers
GROUP BY 
    lockers.locker_id
ORDER BY 
    status_change_count DESC;











6.Lekérdezés azoknak a diákoknak az óráira, amelyek a szokásos munkaidőn kívül vannak (pl. 8 AM előtt vagy 5 PM után)**
Ez a lekérdezés azokat a diákokat keres, akiknek az órái 8 AM előtt kezdődnek vagy 5 PM után érnek véget.


SELECT 
    students.student_id, 
    students.full_name, 
    timetables.subject_id, 
    timetables.start_time, 
    timetables.end_time
FROM 
    timetables
JOIN 
    students ON timetables.student_id = students.student_id
WHERE 
    timetables.start_time < '08:00' 
    OR timetables.end_time > '17:00';







7.Lekérdezés azoknak a diákoknak, akik ugyanazt a szekrényt használják**
Ez a lekérdezés azokat a diákokat azonosítja, akik ugyanazt a szekrényt használják.


SELECT 
    lr1.locker_id, 
    s1.full_name AS student_1, 
    s2.full_name AS student_2
FROM 
    locker_relationships lr1
JOIN 
    locker_relationships lr2 ON lr1.locker_id = lr2.locker_id 
                             AND lr1.rfid_tag <> lr2.rfid_tag
JOIN 
    students s1 ON lr1.rfid_tag = s1.rfid_tag
JOIN 
    students s2 ON lr2.rfid_tag = s2.rfid_tag;







8.Lekérdezés arról, hogy mely diákok kaptak ugyanazt a tanárt több különböző tantárgyhoz**
Ez a lekérdezés olyan diákokat talál, akik ugyanazt a tanártól kaptak órát két vagy több különböző tantárgyból.


SELECT 
    students.full_name, 
    subjects.teacher_name, 
    COUNT(subjects.subject_id) AS subject_count
FROM 
    timetables
JOIN 
    students ON timetables.student_id = students.student_id
JOIN 
    subjects ON timetables.subject_id = subjects.subject_id
GROUP BY 
    students.student_id, subjects.teacher_name
HAVING 
    subject_count >= 2;







9.Lekérdezés a legnagyobb óradíjakra diákok számára**
Ez a lekérdezés megjeleníti a diákok számára a leghosszabb óradíjat.


SELECT 
    s.full_name, 
    t.subject_id, 
    t.day_of_week, 
    TIMESTAMPDIFF(MINUTE, t.start_time, t.end_time) AS duration
FROM 
    timetables t
JOIN 
    students s ON t.student_id = s.student_id
ORDER BY 
    duration DESC;







10. Lekérdezés azokról a diákokról, akiknek nincs szekrénye**
Ez a lekérdezés megjeleníti azokat a diákokat, akiknek nincs hozzárendelt szekrénye.


SELECT 
    s.full_name 
FROM 
    students s
LEFT JOIN 
    locker_relationships lr ON s.rfid_tag = lr.rfid_tag
WHERE 
    lr.rfid_tag IS NULL;


